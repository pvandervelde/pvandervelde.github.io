<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<link rel="self" href="https://www.petrikvandervelde.nl/" />
	<id>https://www.petrikvandervelde.nl/</id>
	<title>Mind vortex</title>
	<rights>2017</rights>
	<updated>2017-05-14T05:28:30Z</updated>
	<subtitle>Welcome!</subtitle>
	<entry>
		<link href="https://www.petrikvandervelde.nl/posts/Ops-Tools-Build-release-V020" />
		<id>https://www.petrikvandervelde.nl/posts/Ops-Tools-Build-release-V020</id>
		<title>Ops-Tools-Build release - V0.2.0</title>
		<updated>2017-05-14T00:00:00Z</updated>
		<content>&lt;div id="post"&gt;
    &lt;div id="post-header"&gt;
        &lt;!--
    Model is: Tuple&lt;IDocument, IDocument&gt;.
    The first one is the current document that is being rendered, the second one is the one for which the post header should be rendered.
--&gt;


&lt;h2&gt;
Ops-Tools-Build release - V0.2.0&lt;/h2&gt;
&lt;div id="post-meta"&gt;
    &lt;p&gt;
Sunday, May 14, 2017
 |         Posted in                     &lt;a id="post-category" role="button" href="/tags/ops-tools-build" class="btn btn-default btn-xs"&gt;Ops-Tools-Build&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;

    &lt;/div&gt;

    &lt;div id="post-content"&gt;
        &lt;p&gt;Version &lt;a href="https://github.com/ops-resource/ops-tools-build/releases/tag/0.2.0"&gt;0.2.0&lt;/a&gt; of the
&lt;a href="https://github.com/ops-resource/ops-tools-build"&gt;Ops-Tools-Build&lt;/a&gt; toolkit was released.&lt;/p&gt;
&lt;p&gt;This release was focussed on providing the capabilities to use the Chef toolset to create new
resources. All the work items that have been closed for this release can be found on
&lt;a href="https://github.com/ops-resource/ops-tools-build/milestone/2?closed=1"&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;New functionality&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ops-resource/ops-tools-build/issues/5"&gt;5&lt;/a&gt; - A new function which provides
the ability to execute &lt;a href="https://github.com/sethvargo/chefspec"&gt;ChefSpec&lt;/a&gt; tests.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ops-resource/ops-tools-build/issues/6"&gt;6&lt;/a&gt; - A new function which
invokes the Chef linting tool &lt;a href="http://www.foodcritic.io/"&gt;Foodcritic&lt;/a&gt; on the selected Chef cookbooks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ops-resource/ops-tools-build/issues/7"&gt;7&lt;/a&gt; - A new function which invokes the
Ruby linting tool &lt;a href="https://github.com/bbatsov/rubocop"&gt;RuboCop&lt;/a&gt; on selected Ruby source files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ops-resource/ops-tools-build/issues/20"&gt;20&lt;/a&gt; - A new package restore script
was added to allow restoring Chef cookbooks via &lt;a href="https://github.com/berkshelf/berkshelf"&gt;Berkshelf&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ops-resource/ops-tools-build/issues/21"&gt;21&lt;/a&gt; - A new switch was added to the
packer function which allows keeping the resources generated with packer in case the packer
build fails. This improves the ability to debug issues in the packer build.&lt;/li&gt;
&lt;/ul&gt;

    &lt;/div&gt;

    &lt;div id="post-footer"&gt;
        &lt;div&gt;
    &lt;div class="navlinks"&gt;
                &lt;a href="/posts/nBuildKit-release-V092" title="Previous Post: nBuildKit release - V0.9.2" class="navlinks-prev"&gt;« nBuildKit release - V0.9.2&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'mindvortex'; // required: replace example with your forum shortname
    var disqus_identifier = 'Ops-Tools-Build-release-V020';
    var disqus_title = 'Ops-Tools-Build release - V0.2.0';
    var disqus_url = 'https://www.petrikvandervelde.nl/posts/Ops-Tools-Build-release-V020';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();

    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;

    &lt;/div&gt;
&lt;/div&gt;</content>
		<summary>Welcome!</summary>
	</entry>
	<entry>
		<link href="https://www.petrikvandervelde.nl/posts/nBuildKit-release-V092" />
		<id>https://www.petrikvandervelde.nl/posts/nBuildKit-release-V092</id>
		<title>nBuildKit release - V0.9.2</title>
		<updated>2017-05-14T00:00:00Z</updated>
		<content>&lt;div id="post"&gt;
    &lt;div id="post-header"&gt;
        &lt;!--
    Model is: Tuple&lt;IDocument, IDocument&gt;.
    The first one is the current document that is being rendered, the second one is the one for which the post header should be rendered.
--&gt;


&lt;h2&gt;
nBuildKit release - V0.9.2&lt;/h2&gt;
&lt;div id="post-meta"&gt;
    &lt;p&gt;
Sunday, May 14, 2017
 |         Posted in                     &lt;a id="post-category" role="button" href="/tags/nbuildkit" class="btn btn-default btn-xs"&gt;nBuildKit&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;

    &lt;/div&gt;

    &lt;div id="post-content"&gt;
        &lt;p&gt;Version &lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/releases/tag/0.9.2"&gt;0.9.2&lt;/a&gt;
of &lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild"&gt;nBuildKit&lt;/a&gt; has been released. This release fixes
a number of bugs and adds a few new improvements&lt;/p&gt;
&lt;p&gt;All the work items that have been closed for this release can be found on
&lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/milestone/31?closed=1"&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Bugs fixed&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/280"&gt;280&lt;/a&gt; - The &lt;code&gt;deploy.pushto.gitbranch&lt;/code&gt;
script called the &lt;code&gt;GitCurrentBranch&lt;/code&gt; task with a &lt;code&gt;WorkingDirectory&lt;/code&gt; property which did not exist,
thus causing the pushing to a git branch deployment step to fail.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/281"&gt;281&lt;/a&gt; - The &lt;code&gt;deploy.pushto.gitbranch&lt;/code&gt;
script did not create the directory into which the repository should be cloned. This caused the
step to fail.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/286"&gt;286&lt;/a&gt; - The &lt;code&gt;GenerateTargetsFile&lt;/code&gt; custom
task applied a custom assembly resolver which did not resolve references to the MsBuild assemblies.
This is a problem for MsBuild 15.0 and higher because from that version onwards the MsBuild assemblies,
e.g. &lt;code&gt;Microsoft.Build.XX&lt;/code&gt; are no longer located in the GAC and can thus not be found by the standard
assembly resolver.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/287"&gt;287&lt;/a&gt; - The &lt;code&gt;shared.prepare.copy.files&lt;/code&gt;
task did not correctly copy the directory hierarchy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/290"&gt;290&lt;/a&gt; - The &lt;code&gt;build.prepare.generatefiles&lt;/code&gt;
script only generated the files if they did not exist. This has been changed so that generated
files are always created and updated.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Improvements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/254"&gt;254&lt;/a&gt; - All warnings and errors have been
given a proper error code for easier parsing of errors from the log.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/282"&gt;282&lt;/a&gt; - The Git, Powershell and NuGet
base tasks have been moved to the Core targets assembly so that they can be used in third party
custom tasks as well.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/284"&gt;284&lt;/a&gt; - A new task has been added that
allows extracting files from one or more ZIP archive files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/285"&gt;285&lt;/a&gt; - Additional conditions have been
added to all &lt;code&gt;ItemGroup&lt;/code&gt; elements to ensure that these item groups are only loaded when they are
required. This reduces build times and improves stability.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/288"&gt;288&lt;/a&gt; - A new task has been added that
allows downloading files from a HTTP URL. If the file in question is an archive file it can
additionally be unzipped before the final copy takes place.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally the first steps to better documentation have been taken. The &lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/blob/master/README.md"&gt;readme&lt;/a&gt;,
the &lt;a href="http://nbuildkit.github.io/nBuildKit.MsBuild/"&gt;introduction&lt;/a&gt; and the &lt;a href="http://nbuildkit.github.io/nBuildKit.MsBuild/docs/contributing"&gt;contributing&lt;/a&gt;
documents have been updated.&lt;/p&gt;

    &lt;/div&gt;

    &lt;div id="post-footer"&gt;
        &lt;div&gt;
    &lt;div class="navlinks"&gt;
                &lt;a href="/posts/nBuildKit-release-V091" title="Previous Post: nBuildKit release - V0.9.1" class="navlinks-prev"&gt;« nBuildKit release - V0.9.1&lt;/a&gt;
                &lt;a href="/posts/Ops-Tools-Build-release-V020" title="Next Post: Ops-Tools-Build release - V0.2.0" class="navlinks-next"&gt;Ops-Tools-Build release - V0.2.0 »&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'mindvortex'; // required: replace example with your forum shortname
    var disqus_identifier = 'nBuildKit-release-V092';
    var disqus_title = 'nBuildKit release - V0.9.2';
    var disqus_url = 'https://www.petrikvandervelde.nl/posts/nBuildKit-release-V092';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();

    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;

    &lt;/div&gt;
&lt;/div&gt;</content>
		<summary>Welcome!</summary>
	</entry>
	<entry>
		<link href="https://www.petrikvandervelde.nl/posts/nBuildKit-release-V091" />
		<id>https://www.petrikvandervelde.nl/posts/nBuildKit-release-V091</id>
		<title>nBuildKit release - V0.9.1</title>
		<updated>2017-04-09T00:00:00Z</updated>
		<content>&lt;div id="post"&gt;
    &lt;div id="post-header"&gt;
        &lt;!--
    Model is: Tuple&lt;IDocument, IDocument&gt;.
    The first one is the current document that is being rendered, the second one is the one for which the post header should be rendered.
--&gt;


&lt;h2&gt;
nBuildKit release - V0.9.1&lt;/h2&gt;
&lt;div id="post-meta"&gt;
    &lt;p&gt;
Sunday, April 9, 2017
 |         Posted in                     &lt;a id="post-category" role="button" href="/tags/nbuildkit" class="btn btn-default btn-xs"&gt;nBuildKit&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;

    &lt;/div&gt;

    &lt;div id="post-content"&gt;
        &lt;p&gt;Hot on the heels of the last release version &lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/releases/tag/0.9.1"&gt;0.9.1&lt;/a&gt;
of &lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild"&gt;nBuildKit&lt;/a&gt; has been released. This release fixes
two bugs and adds a few internal improvements.&lt;/p&gt;
&lt;p&gt;All the work items that have been closed for this release can be found on
&lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/milestone/29?closed=1"&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Bugs fixed&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/273"&gt;273&lt;/a&gt; - The &lt;code&gt;CalculateSemanticVersionWithGitVersion&lt;/code&gt;
task used the current directory as the working directory. While that is correct in most cases
there are some cases, especially when running the integration tests, where that is not correct.
This has been fixed by requiring the specification of the working directory.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/277"&gt;277&lt;/a&gt; - In the same way all NuGet tasks
now need a working directory specified in order to make sure that the correct workspace is used
when interacting with the NuGet command line.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Improvements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/272"&gt;272&lt;/a&gt; - The
&lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/blob/master/src/tests/TestFunctions.PrepareWorkspace.ps1"&gt;TestFunctions.PrepareWorkspace.ps1&lt;/a&gt;
and the &lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/blob/master/src/tests/TestFunctions.Git.ps1"&gt;TestFunctions.Git.ps1&lt;/a&gt;
have been updated with additional functions and checks so that when creating a test workspace the
existing git flow process is only completed if the specified branch exists on the remote. This changes
the completion of the git flow process from mandatory to optional.&lt;/li&gt;
&lt;li&gt;Additionally the &lt;code&gt;IsMasterBranch&lt;/code&gt; and &lt;code&gt;IsDevelopBranch&lt;/code&gt; properties have been defined in the settings
file. These two properties indicate whether or not the current branch is the &lt;code&gt;master&lt;/code&gt; or &lt;code&gt;develop&lt;/code&gt;
branch respectively.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/69"&gt;69&lt;/a&gt; - The documentation for nBuildKit itself
is being moved from the wiki to a GitHub pages website. As of this release the build for nBuildKit
will generate the website using &lt;a href="https://wyam.io"&gt;Wyam&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

    &lt;/div&gt;

    &lt;div id="post-footer"&gt;
        &lt;div&gt;
    &lt;div class="navlinks"&gt;
                &lt;a href="/posts/Ops-Tools-Build-release-V011" title="Previous Post: Ops-Tools-Build release - V0.1.0 and V0.1.1" class="navlinks-prev"&gt;« Ops-Tools-Build release - V0.1.0 and V0.1.1&lt;/a&gt;
                &lt;a href="/posts/nBuildKit-release-V092" title="Next Post: nBuildKit release - V0.9.2" class="navlinks-next"&gt;nBuildKit release - V0.9.2 »&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'mindvortex'; // required: replace example with your forum shortname
    var disqus_identifier = 'nBuildKit-release-V091';
    var disqus_title = 'nBuildKit release - V0.9.1';
    var disqus_url = 'https://www.petrikvandervelde.nl/posts/nBuildKit-release-V091';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();

    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;

    &lt;/div&gt;
&lt;/div&gt;</content>
		<summary>Welcome!</summary>
	</entry>
	<entry>
		<link href="https://www.petrikvandervelde.nl/posts/Ops-Tools-Build-release-V011" />
		<id>https://www.petrikvandervelde.nl/posts/Ops-Tools-Build-release-V011</id>
		<title>Ops-Tools-Build release - V0.1.0 and V0.1.1</title>
		<updated>2017-04-09T00:00:00Z</updated>
		<content>&lt;div id="post"&gt;
    &lt;div id="post-header"&gt;
        &lt;!--
    Model is: Tuple&lt;IDocument, IDocument&gt;.
    The first one is the current document that is being rendered, the second one is the one for which the post header should be rendered.
--&gt;


&lt;h2&gt;
Ops-Tools-Build release - V0.1.0 and V0.1.1&lt;/h2&gt;
&lt;div id="post-meta"&gt;
    &lt;p&gt;
Sunday, April 9, 2017
 |         Posted in                     &lt;a id="post-category" role="button" href="/tags/ops-tools-build" class="btn btn-default btn-xs"&gt;Ops-Tools-Build&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;

    &lt;/div&gt;

    &lt;div id="post-content"&gt;
        &lt;p&gt;Last week version &lt;a href="https://github.com/ops-resource/ops-tools-build/releases/tag/0.1.0"&gt;0.1.0&lt;/a&gt; of the
&lt;a href="https://github.com/ops-resource/ops-tools-build"&gt;Ops-Tools-Build&lt;/a&gt; toolkit was released. With the recent
&lt;a href="./posts/nBuildKit-release-V091"&gt;0.9.1 release of nBuildKit&lt;/a&gt; version &lt;a href="https://github.com/ops-resource/ops-tools-build/releases/tag/0.1.1"&gt;0.1.1&lt;/a&gt;
of the Ops-Tools-Build toolkit was released.&lt;/p&gt;
&lt;p&gt;All the work items that have been closed for this release can be found on
&lt;a href="https://github.com/ops-resource/ops-tools-build/milestone/1?closed=1"&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;New functionality&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ops-resource/ops-tools-build/issues/3"&gt;3&lt;/a&gt; - New scripts have been added to allow
the creation of an ISO file using the &lt;a href="https://sourceforge.net/projects/tumagcc"&gt;MakeIsoFS&lt;/a&gt; command
line application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ops-resource/ops-tools-build/issues/4"&gt;4&lt;/a&gt; - New scripts have been added to allow
invocation of the &lt;a href="https://www.packer.io/"&gt;packer&lt;/a&gt; command line tool used to generate VM and
container images from a set of configuration files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ops-resource/ops-tools-build/issues/10"&gt;10&lt;/a&gt; - New scripts were added to allow
calculation of the hash of one or more files&lt;/li&gt;
&lt;/ul&gt;

    &lt;/div&gt;

    &lt;div id="post-footer"&gt;
        &lt;div&gt;
    &lt;div class="navlinks"&gt;
                &lt;a href="/posts/Ubiquiti-networking-gear" title="Previous Post: Setting up a home network with Ubiquiti" class="navlinks-prev"&gt;« Setting up a home network with Ubiquiti&lt;/a&gt;
                &lt;a href="/posts/nBuildKit-release-V091" title="Next Post: nBuildKit release - V0.9.1" class="navlinks-next"&gt;nBuildKit release - V0.9.1 »&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'mindvortex'; // required: replace example with your forum shortname
    var disqus_identifier = 'Ops-Tools-Build-release-V011';
    var disqus_title = 'Ops-Tools-Build release - V0.1.0 and V0.1.1';
    var disqus_url = 'https://www.petrikvandervelde.nl/posts/Ops-Tools-Build-release-V011';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();

    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;

    &lt;/div&gt;
&lt;/div&gt;</content>
		<summary>Welcome!</summary>
	</entry>
	<entry>
		<link href="https://www.petrikvandervelde.nl/posts/Ubiquiti-networking-gear" />
		<id>https://www.petrikvandervelde.nl/posts/Ubiquiti-networking-gear</id>
		<title>Setting up a home network with Ubiquiti</title>
		<updated>2017-04-07T00:00:00Z</updated>
		<content>&lt;div id="post"&gt;
    &lt;div id="post-header"&gt;
        &lt;!--
    Model is: Tuple&lt;IDocument, IDocument&gt;.
    The first one is the current document that is being rendered, the second one is the one for which the post header should be rendered.
--&gt;


&lt;h2&gt;
Setting up a home network with Ubiquiti&lt;/h2&gt;
&lt;div id="post-meta"&gt;
    &lt;p&gt;
Friday, April 7, 2017
 |         Posted in                     &lt;a id="post-category" role="button" href="/tags/hardware" class="btn btn-default btn-xs"&gt;Hardware&lt;/a&gt;
                    &lt;a id="post-category" role="button" href="/tags/home-network" class="btn btn-default btn-xs"&gt;Home network&lt;/a&gt;
                    &lt;a id="post-category" role="button" href="/tags/ubiquiti" class="btn btn-default btn-xs"&gt;Ubiquiti&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;

    &lt;/div&gt;

    &lt;div id="post-content"&gt;
        &lt;p&gt;A little while back we finally got fibre in our street. After spending many years on ADSL (we don't
talk about the time of dial-up ...) it was finally time for some decent network speeds at home. As
the fibre was being installed in my house it was also time to evaluate the networking gear I was
using. Until now I had always used the modem / router provided by the ISP with an additional cheap
switch. The gear always worked fine, but didn't provide configuration options other than the ones that
describe the connection to the ISP. As I was starting to use my &lt;a href="./posts/Updating-Hyper-v-server-to-Windows2016"&gt;Hyper-V server&lt;/a&gt;
a lot more and was starting to run multiple VM's it would be nice to get some better control over
the network. Additionally based on one of &lt;a href="https://www.troyhunt.com/no-you-cant-join-my-wifi-network/"&gt;Troy Hunt's&lt;/a&gt;
blog posts I would also like to set up a separate guest network.&lt;/p&gt;
&lt;h3&gt;The selection&lt;/h3&gt;
&lt;p&gt;The prolific Troy Hunt has written about his &lt;a href="https://www.troyhunt.com/ubiquiti-all-the-things-how-i-finally-fixed-my-dodgy-wifi/"&gt;network&lt;/a&gt;
setup so I used that as my starting point for finding some new network gear. Fortunately (or unfortunately)
I don't have as much area to cover as Troy does so I didn't need nearly as much hardware. The parts
I got are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ubnt.com/unifi-routing/usg/"&gt;Unifi security gateway&lt;/a&gt;: The router which provides amongst
other things a firewall, subnet capabilities and DHCP.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ubnt.com/unifi-switching/unifi-switch-8/"&gt;Unifi switch 8 (US-8-60W)&lt;/a&gt;: The managed switch
which has 4 &lt;a href="https://en.wikipedia.org/wiki/Power_over_Ethernet"&gt;PoE&lt;/a&gt; ports.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ubnt.com/unifi/unifi-ap-ac-lite/"&gt;Unifi AP AC LITE&lt;/a&gt;: The smallest indoor access point
available from Ubiquiti. Given that my apartment is relatively small I don't have to worry about
covering a lot of area, and smaller access points are cheaper.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ubnt.com/unifi/unifi-cloud-key/"&gt;Unifi cloud key&lt;/a&gt;: The management device which runs
the Unfi software for managing the network.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Except for the cloud key this is pretty much the minimal set of hardware required. The cloud key runs
the unifi software which is used to manage the network configuration. You can install the unifi
software on a PC but then you need an extra PC or VM running. While I have a Hyper-V server it was easier
just to pay for the cloud key and have a separate controller for the network. Note that the network
functions just fine without any configuration. However if you want to make changes the easiest way
to do so is through the unifi software, although you could do it by SSH-ing into each device.&lt;/p&gt;
&lt;p&gt;Another thing to note is that the the 60W switch has 4 PoE ports of the 802.3af kind. Unfortunately
the access point requires 24V passive PoE. So either you have to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Power the access point of the converter that you get with the access point.&lt;/li&gt;
&lt;li&gt;Upgrade the access point to the &lt;a href="https://www.ubnt.com/unifi/unifi-ap-ac-pro/"&gt;UAP-AC-PRO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Upgrade the switch to the &lt;a href="https://www.ubnt.com/unifi-switching/unifi-switch-8-150w/"&gt;US-8-150W&lt;/a&gt;
switch which has both 802.3af PoE and 24V passive PoE.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As much as I would like to power the access point of the switch I still opted for the first option,
the additional investment wasn't quite worth having one less cable around.&lt;/p&gt;
&lt;h3&gt;Configuration&lt;/h3&gt;
&lt;p&gt;The actual configuration was pretty easy, plug in all the parts and things start working, at least
for the internal network. Once this is done you can configure the network through the unifi software.
To do so the first thing to do is to to find the cloud key. There's a useful plugin for
&lt;a href="https://chrome.google.com/webstore/detail/ubiquiti-device-discovery/hmpigflbjeapnknladcfphgkemopofig?utm_source=chrome-app-launcher-info-dialog"&gt;chrome&lt;/a&gt;
that allows you to find any Ubiquiti devices on your local network, otherwise you can try to guess
the IP address of the cloud key. If you only have 4 devices like I do that shouldn't take very long.
The gateway by default assumes you are using the &lt;code&gt;192.168.1.0/24&lt;/code&gt; subnet and the gateway is always
the first one.&lt;/p&gt;
&lt;p&gt;Once you are logged on to the unifi software it makes sense to give the cloud key a fixed IP address
I gave mine the 192.168.1.2 IP address as I am using the &lt;code&gt;192.168.1.1/24&lt;/code&gt; subnet for all my networking
gear. And yes I know I don't have enough networking devices for them to warrant being on their own
subnet but it makes things a little easier and it allows me to learn about &lt;a href="https://en.wikipedia.org/wiki/Subnetwork"&gt;subnetting&lt;/a&gt;
and &lt;a href="https://en.wikipedia.org/wiki/Virtual_LAN"&gt;vlans&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Subnetting adventures&lt;/h3&gt;
&lt;p&gt;As mentioned in the introduction one of the changes I wanted to make was to create a separate guest
network. By default a vlan only guest network is created, however I wanted to move the guests onto
their own subnet so I created a new network with the &lt;code&gt;192.168.5.1/24&lt;/code&gt; subnet. I also set the vlan
specifier to &lt;code&gt;1685&lt;/code&gt;. And finally I marked this network as a guest network so that the controller
applies the guest firewall rules.&lt;/p&gt;
&lt;p&gt;Then I created a wireless guest network with the same vlan. What confused me initially is that there
is no relation between the wireless network and the subnet other than the vlan tag. Somehow having the
same vlan tag is enough to direct the clients onto the the correct subnet.&lt;/p&gt;
&lt;p&gt;The last step of the configuration of the guest network is to configure the switch. Because the
access point has three different subnets going to it, the managment subnet for the access point itself,
the guest wifi and the internal wifi, you need to create a custom ‘network’ on the switch which carries
all three networks, making sure that the untagged network is the one on which you want the access
point to get an IP address.&lt;/p&gt;
&lt;p&gt;Another item I found was that for some purposes the standard IP lease of 24 hours is a bit long. One
of the things I'm currently working on is building VM images of different services for use in a test
build environment. While doing that I'm creating &lt;a href="https://github.com/Calvinverse"&gt;base boxes&lt;/a&gt; for
Windows and Linux which involves spinning up a VM, installing the OS, configuring it and capturing
the image. While working on the code to automate this process I spin up and shut down VMs quite a lot.
If you're using the gateway as the DHCP server and use the standard IP lease time then you run through
IP addresses quite quickly. So I created have a separate IP subnet for those VMs where the IP lease
time is 2 hours (which is more than long enough to create a VM and capture a base image).&lt;/p&gt;
&lt;h3&gt;In the end&lt;/h3&gt;
&lt;p&gt;In conclusion it's a good set of hardware and software and as a bonus, there are updates which apply
without problems. There is something reassuring in the fact that the manufacturer actually cares enough
about their product that they want to keep it running, unlike much of the consumer gear.&lt;/p&gt;
&lt;p&gt;The unifi software provides a lot of useful and interesting capabilities and it's obviously aimed
at the business / educational environment. There are a lot of of features that I don't need, but they
are fun to play with&lt;/p&gt;

    &lt;/div&gt;

    &lt;div id="post-footer"&gt;
        &lt;div&gt;
    &lt;div class="navlinks"&gt;
                &lt;a href="/posts/nBuildKit-release-V090" title="Previous Post: nBuildKit release - V0.9.0" class="navlinks-prev"&gt;« nBuildKit release - V0.9.0&lt;/a&gt;
                &lt;a href="/posts/Ops-Tools-Build-release-V011" title="Next Post: Ops-Tools-Build release - V0.1.0 and V0.1.1" class="navlinks-next"&gt;Ops-Tools-Build release - V0.1.0 and V0.1.1 »&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'mindvortex'; // required: replace example with your forum shortname
    var disqus_identifier = 'Ubiquiti-networking-gear';
    var disqus_title = 'Setting up a home network with Ubiquiti';
    var disqus_url = 'https://www.petrikvandervelde.nl/posts/Ubiquiti-networking-gear';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();

    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;

    &lt;/div&gt;
&lt;/div&gt;</content>
		<summary>Welcome!</summary>
	</entry>
	<entry>
		<link href="https://www.petrikvandervelde.nl/posts/nBuildKit-release-V090" />
		<id>https://www.petrikvandervelde.nl/posts/nBuildKit-release-V090</id>
		<title>nBuildKit release - V0.9.0</title>
		<updated>2017-04-03T00:00:00Z</updated>
		<content>&lt;div id="post"&gt;
    &lt;div id="post-header"&gt;
        &lt;!--
    Model is: Tuple&lt;IDocument, IDocument&gt;.
    The first one is the current document that is being rendered, the second one is the one for which the post header should be rendered.
--&gt;


&lt;h2&gt;
nBuildKit release - V0.9.0&lt;/h2&gt;
&lt;div id="post-meta"&gt;
    &lt;p&gt;
Monday, April 3, 2017
 |         Posted in                     &lt;a id="post-category" role="button" href="/tags/nbuildkit" class="btn btn-default btn-xs"&gt;nBuildKit&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;

    &lt;/div&gt;

    &lt;div id="post-content"&gt;
        &lt;p&gt;Version &lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/releases/tag/0.9.0"&gt;0.9.0&lt;/a&gt; of &lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild"&gt;nBuildKit&lt;/a&gt;
has been released. The last release I talked about on this blog was &lt;a href="posts/nBuildKit-release-V051"&gt;0.5.1&lt;/a&gt;.
Since then a &lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/releases"&gt;lot more versions&lt;/a&gt; have been
released. The &lt;code&gt;0.9.0&lt;/code&gt; release was supposed to be a stabilization release but there were many major
improvements which makes this a major change release.&lt;/p&gt;
&lt;p&gt;The highlights are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The settings describing artefacts, e.g. the nuspec and zip archive files to build, have moved to
a &lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/215"&gt;separate file&lt;/a&gt; &lt;code&gt;artefacts.settings.props&lt;/code&gt;.
This allows each of the different stages, build, test and release, to easily use these settings
without having to load configuration files from the other stages.&lt;/li&gt;
&lt;li&gt;All user specific configuration files now have a &lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/224"&gt;version number&lt;/a&gt;
which indicates for which version of nBuildKit they were created. This will allow nBuildKit to
transform older configuration files prior to using them.&lt;/li&gt;
&lt;li&gt;The inline tasks have been &lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/230"&gt;moved to a .NET assembly&lt;/a&gt;.
This simplifies the project includes that need to be made to get all the required tasks loaded.
Additionally more complex tasks can be created and &lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/234"&gt;unit tests can be written and executed&lt;/a&gt;
which should improve the quality of the tasks.&lt;/li&gt;
&lt;li&gt;User &lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/191"&gt;defined location&lt;/a&gt; and
&lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/192"&gt;transformation&lt;/a&gt; of the configuration
files prior to starting the build. In combination with the version numbers in the configuration
files this allows nBuildKit to use configuration files from a previous version while still using
the most recent version of nBuildKit. Note that it is currently not possible to upgrade the old
(0.8.3 and prior) configurations to 0.9.0 this way.&lt;/li&gt;
&lt;li&gt;Build, test and deploy steps can define &lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/196"&gt;pre- and post-steps&lt;/a&gt;
which are executed before and after the execution of the step. Additionally global pre- and post-steps
can be defined which areo executed before and after each step. These pre- and post-steps can for
instance be used to &lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/185"&gt;write information to a log file&lt;/a&gt;
or to gather post step information.&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/206"&gt;build server specific code&lt;/a&gt; was
moved into separate NuGet packages so that these can be pulled down on the build server only. Three
different packages have been created for &lt;a href="https://jenkins.io/"&gt;Jenkins&lt;/a&gt;,
&lt;a href="https://msdn.microsoft.com/library/ms181709%28v=vs.120%29.aspx?f=255&amp;amp;MSPPError=-2147217396"&gt;TFS2013&lt;/a&gt;
and &lt;a href="https://www.visualstudio.com/en-us/docs/build/overview"&gt;TFS2015 / TFS2017&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The layout of the scripts and NuGet packages has changed so that it is easier to create a
&lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/220"&gt;new set of build tools based on nBuildKit&lt;/a&gt;.
With this change it is now possible to create a build / test / deploy library that includes all or
some of the nBuildKit capabilities while providing its own additional capabilities. An example is
the &lt;a href="https://github.com/ops-resource/ops-tools-build"&gt;ops-tools-build&lt;/a&gt; library which is being used
in the &lt;a href="https://en.wikipedia.org/wiki/Infrastructure_as_Code"&gt;infrastructure-as-code&lt;/a&gt; work I'm doing.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition to the major changes some additional build, test and deploy steps have also been defined:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Complete a &lt;a href="https://www.atlassian.com/git/tutorials/comparing-workflows#gitflow-workflow"&gt;gitflow&lt;/a&gt;
stage, e.g. finishing the feature, hotfix or release branch, to verify that the pending merge will
not break the build. Additionally the results of the merge can be captured, by archiving the
&lt;code&gt;.git&lt;/code&gt; folder, and can later be used in the deploy process to push the merge to a git remote.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/255"&gt;Copying files&lt;/a&gt; from the file system or
from a NuGet package.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/238"&gt;ILMerge&lt;/a&gt; one or more assemblies into a
target assembly.&lt;/li&gt;
&lt;li&gt;Generating a targets file from an assembly containing MsBuild tasks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/146"&gt;Invoking&lt;/a&gt; &lt;a href="https://wyam.io"&gt;Wyam&lt;/a&gt;
during the build process. Note that this is a late addition and hasn't been tested completely yet&lt;/li&gt;
&lt;li&gt;Invoking &lt;a href="https://github.com/pester/Pester"&gt;Pester&lt;/a&gt; during the test phase.&lt;/li&gt;
&lt;li&gt;Pushing files to a git branch during the deploy stage.&lt;/li&gt;
&lt;li&gt;Pushing an entire repository to a git remote during the deploy stage.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally the performance of the whole build process has been improved by changing how the template
tokens are &lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/issues/242"&gt;generated and loaded&lt;/a&gt;. The
overall speed up for the nBuildKit build itself is about a factor two.&lt;/p&gt;
&lt;p&gt;All the work items that have been closed for this release can be found on
&lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/milestone/26?closed=1"&gt;github&lt;/a&gt;.&lt;/p&gt;

    &lt;/div&gt;

    &lt;div id="post-footer"&gt;
        &lt;div&gt;
    &lt;div class="navlinks"&gt;
                &lt;a href="/posts/Updating-Hyper-v-server-to-Windows2016" title="Previous Post: Updating my Hyper-V server to Windows 2016" class="navlinks-prev"&gt;« Updating my Hyper-V server to Windows 2016&lt;/a&gt;
                &lt;a href="/posts/Ubiquiti-networking-gear" title="Next Post: Setting up a home network with Ubiquiti" class="navlinks-next"&gt;Setting up a home network with Ubiquiti »&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'mindvortex'; // required: replace example with your forum shortname
    var disqus_identifier = 'nBuildKit-release-V090';
    var disqus_title = 'nBuildKit release - V0.9.0';
    var disqus_url = 'https://www.petrikvandervelde.nl/posts/nBuildKit-release-V090';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();

    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;

    &lt;/div&gt;
&lt;/div&gt;</content>
		<summary>Welcome!</summary>
	</entry>
	<entry>
		<link href="https://www.petrikvandervelde.nl/posts/Updating-Hyper-v-server-to-Windows2016" />
		<id>https://www.petrikvandervelde.nl/posts/Updating-Hyper-v-server-to-Windows2016</id>
		<title>Updating my Hyper-V server to Windows 2016</title>
		<updated>2017-03-18T00:00:00Z</updated>
		<content>&lt;div id="post"&gt;
    &lt;div id="post-header"&gt;
        &lt;!--
    Model is: Tuple&lt;IDocument, IDocument&gt;.
    The first one is the current document that is being rendered, the second one is the one for which the post header should be rendered.
--&gt;


&lt;h2&gt;
Updating my Hyper-V server to Windows 2016&lt;/h2&gt;
&lt;div id="post-meta"&gt;
    &lt;p&gt;
Saturday, March 18, 2017
 |         Posted in                     &lt;a id="post-category" role="button" href="/tags/hyper-v" class="btn btn-default btn-xs"&gt;Hyper-V&lt;/a&gt;
                    &lt;a id="post-category" role="button" href="/tags/windows2016" class="btn btn-default btn-xs"&gt;Windows2016&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;

    &lt;/div&gt;

    &lt;div id="post-content"&gt;
        &lt;p&gt;One of the computers I have in my home is a Hyper-V server which I use to experiment with all things
virtual machines, e.g. &lt;a href="https://www.thoughtworks.com/insights/blog/infrastructure-code-reason-smile"&gt;infrastructure-as-code&lt;/a&gt;.
This server was until recently running Windows 2012R2 with the associated version of Hyper-V. With
the release of Windows 2016 a new version of Hyper-V was available which had some interesting
features, like &lt;a href="https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/user-guide/nested-virtualization"&gt;nested virtualization&lt;/a&gt;
which allows running VMs on VMs and running Hyper-V containers. All in all enough interesting features
to warrant upgrading my server.&lt;/p&gt;
&lt;p&gt;There are however some issues to deal with. The first one being, which version of Windows 2016 are
we going to install? The ideal version to install would be the &lt;a href="https://technet.microsoft.com/en-us/hyper-v-server-docs/hyper-v-server-2016?f=255&amp;amp;MSPPError=-2147217396"&gt;bare metal Hyper-V&lt;/a&gt;
option with &lt;a href="https://technet.microsoft.com/en-us/windows-server-docs/get-started/windows-server-2016"&gt;Windows 2016 server Core&lt;/a&gt;
being the second best option. The problem with these version is that it might be harder to
configure the network and attach the machine to the active directory. I currently don't have enough
experience managing Windows through (remote) powershell in order to be able to resolve those kinds
of issues without a large amount of help from Google or Bing. The goal for this exercise is to get
the machine updated so that we can use it, not to get the most lean version of Windows installed, so
I opted to go for the full GUI version of Windows 2016.&lt;/p&gt;
&lt;p&gt;To make things more interesting my Active Directory server is a VM running on the Hyper-V server.
And yes I know there should be at least two Active Directory servers on different physical machines
but until I have lots of money and can afford to have multiple servers in my house I will work
with having a single AD server.&lt;/p&gt;
&lt;p&gt;The approach I followed to upgrade the operating system on my server to Windows 2016 was as follows.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make backups of everything and be ready to spend some time restoring the AD server, i.e. this is
probably better done as a weekend job.&lt;/li&gt;
&lt;li&gt;Create a &lt;a href="https://www.microsoft.com/en-us/download/windows-usb-dvd-download-tool"&gt;bootable USB&lt;/a&gt;
with the Windows2016 installer.&lt;/li&gt;
&lt;li&gt;Attach a keyboard, mouse and monitor to the server so that we can log in to the server directly.
Installing Windows remotely is not possible with my local configuration.&lt;/li&gt;
&lt;li&gt;Insert the USB drive, reboot the server and make sure it boots from the USB key&lt;/li&gt;
&lt;li&gt;After the Windows installation starts make sure to remove the existing partitions on the original
OS drive. While the OS could be upgraded that also leaves a lot of unused files around. Unfortunately
in that case it will be hard to determine if these files can be deleted or not. By doing a clean
install we can be sure that there will not be any left-overs from the upgrade.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once the new operating system is installed the next step is to restore the VMs. Because all the
VM information was stored on physically different disks than the OS disk all the virtual hard drives
and VM configuration files still exist. In this case it is easy to import the old virtual machines
via the Hyper-V manager.&lt;/p&gt;
&lt;p&gt;Once all the VMs were up and running again the last step was to attach the Hyper-V machine to the
domain so that it is easy to use the remote desktop capabilities. Now attaching the machine to
the domain is easy, the problem occurs when you have to restart the Hyper-V machine because after
the reboot the network connection will be set to the public profile instead of the domain profile
which means remote desktop and friends are all blocked. This is all caused by the fact that when the
Hyper-V machine boots up it doesn't have connection to the AD server, because that is a VM running
on the Hyper-V machine, and thus the network profile is set to be public for security purposes.&lt;/p&gt;
&lt;p&gt;In order to fix this we need to either force the &lt;a href="https://newsignature.com/articles/network-location-awareness-service-can-ruin-day-fix/"&gt;Network Location Awareness service&lt;/a&gt; to run
after the AD server has started, or we need to restart the service after a short period. In my case
setting the service start in delayed mode didn't really work so I created a scheduled task which
restarted the service by calling the following command line&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -noprofile -nologo -command "restart-service nlasvc -force"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Over all the upgrade was easier than I thought and there were only minor set backs. Some of the lessons
that were learned are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ideally for jobs like this you would have an extra keyboard, mouse and monitor around, that way you
can still use the normal PC for googling issues that you come across.&lt;/li&gt;
&lt;li&gt;Importing old VMs in Hyper-V is easy as long as you make sure that you know where all the files
are.&lt;/li&gt;
&lt;li&gt;Ideally you would have multiple AD servers, running of different physical machines. Then again
ideally I'd also have lots of money to pay for all these physical machines 😉&lt;/li&gt;
&lt;/ul&gt;

    &lt;/div&gt;

    &lt;div id="post-footer"&gt;
        &lt;div&gt;
    &lt;div class="navlinks"&gt;
                &lt;a href="/posts/Blog-publishing-with-AppVeyor" title="Previous Post: Blog publishing with AppVeyor" class="navlinks-prev"&gt;« Blog publishing with AppVeyor&lt;/a&gt;
                &lt;a href="/posts/nBuildKit-release-V090" title="Next Post: nBuildKit release - V0.9.0" class="navlinks-next"&gt;nBuildKit release - V0.9.0 »&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'mindvortex'; // required: replace example with your forum shortname
    var disqus_identifier = 'Updating-Hyper-v-server-to-Windows2016';
    var disqus_title = 'Updating my Hyper-V server to Windows 2016';
    var disqus_url = 'https://www.petrikvandervelde.nl/posts/Updating-Hyper-v-server-to-Windows2016';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();

    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;

    &lt;/div&gt;
&lt;/div&gt;</content>
		<summary>Welcome!</summary>
	</entry>
	<entry>
		<link href="https://www.petrikvandervelde.nl/posts/Blog-publishing-with-AppVeyor" />
		<id>https://www.petrikvandervelde.nl/posts/Blog-publishing-with-AppVeyor</id>
		<title>Blog publishing with AppVeyor</title>
		<updated>2017-01-16T00:00:00Z</updated>
		<content>&lt;div id="post"&gt;
    &lt;div id="post-header"&gt;
        &lt;!--
    Model is: Tuple&lt;IDocument, IDocument&gt;.
    The first one is the current document that is being rendered, the second one is the one for which the post header should be rendered.
--&gt;


&lt;h2&gt;
Blog publishing with AppVeyor&lt;/h2&gt;
&lt;div id="post-meta"&gt;
    &lt;p&gt;
Monday, January 16, 2017
 |         Posted in                     &lt;a id="post-category" role="button" href="/tags/appveyor" class="btn btn-default btn-xs"&gt;AppVeyor&lt;/a&gt;
                    &lt;a id="post-category" role="button" href="/tags/blog" class="btn btn-default btn-xs"&gt;Blog&lt;/a&gt;
                    &lt;a id="post-category" role="button" href="/tags/build" class="btn btn-default btn-xs"&gt;Build&lt;/a&gt;
                    &lt;a id="post-category" role="button" href="/tags/deploy" class="btn btn-default btn-xs"&gt;Deploy&lt;/a&gt;
                    &lt;a id="post-category" role="button" href="/tags/nbuildkit" class="btn btn-default btn-xs"&gt;nBuildKit&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;

    &lt;/div&gt;

    &lt;div id="post-content"&gt;
        &lt;p&gt;One part of &lt;a href="/posts/Goals-for-2017"&gt;improving my career and increasing my professional reach&lt;/a&gt; is to
post more to this blog about the work that I am doing and the code and skills that come from this
work. Unfortunately at the moment writing is still more of a chore than it is a pleasure so that
means that if I want to publish more I need to make it very easy for me to do so, otherwise the publishing
process will just add yet another obstacle that I need to get past while producing content.&lt;/p&gt;
&lt;p&gt;With me being a build engineer by profession the obvious solution was not to follow the
&lt;a href="https://www.troyhunt.com/its-a-new-blog/"&gt;sensible path&lt;/a&gt; of a managed system but to create some
kind of build system to automatically build and publish my blog posts. Troy Hunt is right in
that a managed system is far quicker and easier to use, thereby saving time that you can use for
improvements elsewhere. In my case however I feel that there is something additional to be gotten from
setting my blog up to be automatically build and deployed. To be specific additional learning experiences,
more knowledge and a new blog post about how I achieved the goal. I hope that those things will
make up for the extra work I have to do in maintaining my own blog.&lt;/p&gt;
&lt;p&gt;So the goals for this project were&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Build every time I push to the &lt;a href="https://github.com/pvandervelde/mindvortex"&gt;source repository&lt;/a&gt; on
an independent environment so that I can be sure that I can always build my blog and nothing is
dependent on my machine being available.&lt;/li&gt;
&lt;li&gt;Publishing should involve a minimal amount of work done from my side. Ideally all I would have to
do is commit my changes, merge them to the &lt;a href="https://github.com/pvandervelde/mindvortex"&gt;master branch&lt;/a&gt;
of the source repository and then sit back and see the new post appear online.&lt;/li&gt;
&lt;li&gt;No maintenance is necessary for what ever system I use to achive this goal. When I build new versions
of one of my libraries, applications or infrastructure resources I want full control over the
build, test and deployment environments. For building my blog that is far less important because
it is a simple process which does not require many different steps.&lt;/li&gt;
&lt;li&gt;Finally it would be nice to make it interesting enough to get a blog post out of it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After a few hours of tinkering that is where we are now, this blog post was build and published
using a combination of &lt;a href="https://www.appveyor.com/"&gt;AppVeyor&lt;/a&gt; as the build server and
&lt;a href="/projects/nBuildKit"&gt;nBuildKit&lt;/a&gt; for the build and deploy scripts.&lt;/p&gt;
&lt;p&gt;In order to achieve this the first step that I took was to set up the build scripts so that I could
build on my local machine. Having a build that executes in the same way on a developer machine
and the build server has many benefits.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Familiarity: developers understand what the build server does because it works exactly as on their
machine.&lt;/li&gt;
&lt;li&gt;Ease of debugging: it is easier to discover the source of any errors if you can execute the scripts
on a developers machine because then you have have full access to the workspace which may not be
the case on a build machine.&lt;/li&gt;
&lt;li&gt;Ease of testing: even build scripts need to be tested. If this is done on a developer machine then
the testing will most likely be able to be executed much quicker because there is less need to
commit every change, push it to the server and wait for the build server to execute the build.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Configuring &lt;code&gt;nBuildKit&lt;/code&gt; means copying the &lt;a href="https://github.com/nbuildkit/nBuildKit.MsBuild/tree/master/src/samples"&gt;sample files&lt;/a&gt;
to the root of the workspace and updating them with values relevant to the project.&lt;/p&gt;
&lt;p&gt;In this case I updated the &lt;code&gt;settings.props&lt;/code&gt; file, which contains the general information about the
build, test and deploy processes, with &lt;a href="https://gist.github.com/pvandervelde/88aa8f644148b4cdb9fa909fe3ff8f69"&gt;product information&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I also &lt;a href="https://gist.github.com/pvandervelde/9853b15889ccf67bafa5fa2e93594ca2"&gt;enabled the automatic merging&lt;/a&gt;
for the &lt;a href="http://nvie.com/posts/a-successful-git-branching-model/"&gt;GitFlow&lt;/a&gt; process. This allows
nBuildKit to automatically complete feature, hotfix and release branches when running on a build
server so that each build also verifies that the final merge will be successful and the changes will
not break anything after the merge.&lt;/p&gt;
&lt;p&gt;The next file to update was the &lt;code&gt;build.settings.props&lt;/code&gt; file, which describes what needs to be done
during the build process, was updated. The first part of that was to define which &lt;a href="https://gist.github.com/pvandervelde/015611f5355b07e1b3246ae81bf2ea0a"&gt;steps should be
taken during the build process&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Clear the workspace. While this is not necessary on a build server, after all a fresh workspace
is used for each build, it is necessary on a developer machine because old artefacts may still
be present.&lt;/li&gt;
&lt;li&gt;Ensure that the build server has configured the workspace with the correct source control information.
Many build systems do not perform a full clone at the start of a build but rather get only the
minimal source control information in addition to the source files. This reduces time and IO
demands, especially for repositories with extensive history. Different build systems have a
different approach to what steps exactly are taken. The lack of source control information, e.g.
the state of different branches, or the branch that the current commit is part of, is not a
problem if the only step is to compiling code however issues can occur if the state of the local
workspace is used to determine version numbers or VCS information. In those cases it is better to
ensure that the workspace is in the same state as it was on the developers machine.&lt;/li&gt;
&lt;li&gt;Gather VCS information like the current commit ID and the branch name. For my blog this information
is embedded in the footer of every page to indicate which commit was build and what version
of the blog you are looking at.&lt;/li&gt;
&lt;li&gt;Complete the active &lt;code&gt;GitFlow&lt;/code&gt; branch, if there is one, by merging the active branch to the
appropriate target branches and adding tags if necessary.&lt;/li&gt;
&lt;li&gt;Get version information with &lt;a href="https://github.com/GitTools/GitVersion"&gt;GitVersion&lt;/a&gt;. This
is done after the merge process so that the version number is the release version.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/pvandervelde/813a19ff4861470ba03591a5ecc4b910"&gt;Build the pages&lt;/a&gt; with Wyam.&lt;/li&gt;
&lt;li&gt;Zip up the generated pages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The final change to the &lt;code&gt;build.settings.props&lt;/code&gt; file was to enable the generation of the archive
files by &lt;a href="https://gist.github.com/pvandervelde/d1ec2c78fc560bd20ef1ef7a375eee30"&gt;uncommenting the &lt;code&gt;ArchivePackageSpecs&lt;/code&gt; section&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The last file to be changed was the &lt;code&gt;deploy.settings.props&lt;/code&gt; file which describes what needs to be
done during the deploy process. As with the &lt;code&gt;build.settings.props&lt;/code&gt; file the first step here was
to select the &lt;a href="https://gist.github.com/pvandervelde/8ee5a1dc96d0835bb8b3aa6354896ba7"&gt;steps that should be taken during the deploy process&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Once again ensure that the build server workspace is configured with the correct source control
information.&lt;/li&gt;
&lt;li&gt;Gather version information in the same way as was done during the build process.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/pvandervelde/c6490e33fd73d0f7afc15677a4bf2e8b"&gt;Push the archive files&lt;/a&gt;
to AppVeyor.&lt;/li&gt;
&lt;li&gt;Push the files contained in the archive file to the &lt;a href="https://github.com/pvandervelde/pvandervelde.github.io"&gt;repository&lt;/a&gt;
that contains the generated pages. This was simply done by enabling the &lt;code&gt;DeployStepsPushToGitBranch&lt;/code&gt;
deploy step and &lt;a href="https://gist.github.com/pvandervelde/9a2dd811faf4d0e56ef3b5069d2e7d3c"&gt;providing information about the repository and branch&lt;/a&gt;
that the files should be pushed to. The commit message for this process currently comes from a text
file in the root of the repository. Ideally there would be some way to discover a decent commit
message, e.g. the name of the most recent post, however many different changes are pushed to the
source repository so selecting the correct commit message is somewhat difficult.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By updating these three files we have provided &lt;code&gt;nBuildKit&lt;/code&gt; with enough information to execute both
the build and deploy processes.&lt;/p&gt;
&lt;p&gt;Once the build scripts were complete and tested the only thing that remained was to configure
AppVeyor. This can either be done through the &lt;a href="https://www.appveyor.com/docs/build-configuration/"&gt;UI or a YAML file&lt;/a&gt;.
In this case I elected to use the &lt;a href="https://gist.github.com/pvandervelde/4171a3b81776132e2800a3f9b802fa43"&gt;YAML file&lt;/a&gt;
so that all information describing my build and deployment process would exist in the repository.&lt;/p&gt;
&lt;p&gt;In order to create the configuration file I copied the &lt;a href="https://www.appveyor.com/docs/appveyor-yml/"&gt;reference file&lt;/a&gt;
and then removed all the bits I didn't need. The only tricky bit was setting up the AppVeyor
environment so that the deploy process could push the final results back to GitHub. For that I
added a &lt;a href="https://github.com/blog/2024-read-only-deploy-keys"&gt;deploy key&lt;/a&gt; to the target repository.
The private part of this key was then encrypted and placed in the YAML file. Some &lt;code&gt;before_deploy&lt;/code&gt;
&lt;a href="https://www.appveyor.com/docs/how-to/private-git-sub-modules/"&gt;script magic&lt;/a&gt; allows the decryption
of the key so that git can push the changes to the repository via SSH.&lt;/p&gt;

    &lt;/div&gt;

    &lt;div id="post-footer"&gt;
        &lt;div&gt;
    &lt;div class="navlinks"&gt;
                &lt;a href="/posts/Goals-for-2017" title="Previous Post: Goals for 2017" class="navlinks-prev"&gt;« Goals for 2017&lt;/a&gt;
                &lt;a href="/posts/Updating-Hyper-v-server-to-Windows2016" title="Next Post: Updating my Hyper-V server to Windows 2016" class="navlinks-next"&gt;Updating my Hyper-V server to Windows 2016 »&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'mindvortex'; // required: replace example with your forum shortname
    var disqus_identifier = 'Blog-publishing-with-AppVeyor';
    var disqus_title = 'Blog publishing with AppVeyor';
    var disqus_url = 'https://www.petrikvandervelde.nl/posts/Blog-publishing-with-AppVeyor';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();

    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;

    &lt;/div&gt;
&lt;/div&gt;</content>
		<summary>Welcome!</summary>
	</entry>
	<entry>
		<link href="https://www.petrikvandervelde.nl/posts/Goals-for-2017" />
		<id>https://www.petrikvandervelde.nl/posts/Goals-for-2017</id>
		<title>Goals for 2017</title>
		<updated>2017-01-13T00:00:00Z</updated>
		<content>&lt;div id="post"&gt;
    &lt;div id="post-header"&gt;
        &lt;!--
    Model is: Tuple&lt;IDocument, IDocument&gt;.
    The first one is the current document that is being rendered, the second one is the one for which the post header should be rendered.
--&gt;


&lt;h2&gt;
Goals for 2017&lt;/h2&gt;
&lt;div id="post-meta"&gt;
    &lt;p&gt;
Friday, January 13, 2017
 |         Posted in                     &lt;a id="post-category" role="button" href="/tags/goals" class="btn btn-default btn-xs"&gt;Goals&lt;/a&gt;
                    &lt;a id="post-category" role="button" href="/tags/life" class="btn btn-default btn-xs"&gt;Life&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;

    &lt;/div&gt;

    &lt;div id="post-content"&gt;
        &lt;p&gt;In 2016 set myself a bunch of goals for the year for different areas of my life. Of all the goals
I only managed to achieve one successfully but am still pretty happy with how the year turned
out. Overall improvements were made and new things were learned so what that concerns it was
a successful year.&lt;/p&gt;
&lt;p&gt;Given that setting goals did sort of work for me in 2016 going into 2017 I decided to do this again
and set some goals in order to actively progress in different areas. This time I also decided to
write the goals down somewhere public.&lt;/p&gt;
&lt;p&gt;For 2017 my goals are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Improve my overall fitness while maintaining my weight at or below 80kg.&lt;/p&gt;
&lt;p&gt;In 2016 my goal was to improve my fitness and lose some weight. Due to a shoulder and elbow injury
I actually gained weight in the first half of the year but over the course of the last 6 months
I managed to lose about 5kgs thanks to a lot of exercise and an improvement in my eating habits.
As a bonus I gained a lot of strength and general endurance. Overall these improvements have made
me feel a lot better, have a more defined set of muscles and helped me in my outdoor spot pursuits
as well.&lt;/p&gt;
&lt;p&gt;For 2017 the goal is to keep the weight the same, just below 80kgs, while improving my general
strength and fitness.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make my career independent from my job&lt;/p&gt;
&lt;p&gt;The last two years I have been working for &lt;a href="https://vista.co"&gt;Vista&lt;/a&gt; as a software / build engineer
responsible for the development tooling and infrastructure. While this has been a bit of a change
from my previous jobs as software developer it has been a great experience. I have learned about
many new technologies, created some awesome tooling and have many more things still to learn and
create. However with this change from general developer to more of an internal tooling / infrastructure
person it has also become clear to me that my technical capabilities will improve more if I make
my toughts, opinions and code available for public scrutiny by the larger development community.
I already have a &lt;a href="/projects"&gt;number of open source projects&lt;/a&gt; but for 2017 I also plan to write
and potentially speak more about the things I'm working on. One part of that is re-re-activating
my blog and writing new posts about some of the cool technologies I'm currently working with and on.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Simplify life and my surroundings.&lt;/p&gt;
&lt;p&gt;The first few years after I moved to New Zealand I didn't have very much in the way of material
possessions, after all I had just moved to the other side of the world with only the things I could
take on the airplane. Additionally I moved almost every year to a new house so getting rid of
useless possessions meant I had to move less stuff from the old house to the new one. Over time
though I have acquired more things both materially and in habits. Some of those things are
&lt;a href="/tags/paragliding"&gt;highly&lt;/a&gt; &lt;a href="/tags/climbing"&gt;prized&lt;/a&gt; however some things are a waste of time and
space. The goal for 2017 is to minimize the amount of useless stuff I have, like pieces of furniture
which are never used, and useless things I do so that there is  more time and space to spend on
things that are useful and improve my life.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Improve my confidence, in general in life but especially for climbing and paragliding&lt;/p&gt;
&lt;p&gt;In general in life having confidence in yourself and your skills is important. For my outdoor
activities, climbing and paragliding, it is even more important. Without confidence in yourself and
your skils it is not possible to perform well in either activity. Due to injuries and some
intense experiences my confidence in either my climbing or flying skills isn't very high at the
moment so 2017 is the year that I will do my utmost best to improve my confidence in my professional
skills, my climbing and paragliding capabilities and life in general.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sports / achievment goals&lt;/p&gt;
&lt;p&gt;The final goals for 2017, at least as far as this list goes, is to actively improve my skils
in climbing and flying.&lt;/p&gt;
&lt;p&gt;For a while I have been trying to improve my climbing skills, strength and endurance enough to
be able to climb a &lt;a href="https://en.wikipedia.org/wiki/Grade_(climbing)"&gt;grade 24&lt;/a&gt;
&lt;a href="https://en.wikipedia.org/wiki/Sport_climbing"&gt;sports climb&lt;/a&gt;. So for 2017 that will be my goal, to
improve enoguh to finally be able to climb a 24. Additionally over the last few years I have been
doing more &lt;a href="https://en.wikipedia.org/wiki/Traditional_climbing"&gt;trad climbing&lt;/a&gt; I am also going to
try to improve my skills in that area by setting myself a goal of climbing a grade 20 on trad.&lt;/p&gt;
&lt;p&gt;In my other outdoor activity, paragliding, the general goals are related to the distance your
can fly &lt;a href="https://en.wikipedia.org/wiki/Paragliding#Cross-country_flying"&gt;cross country (XC)&lt;/a&gt;. As I
have so far not managed to get away from launch at all my goal for 2017 is to do an XC flight of
more than 5km.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

    &lt;/div&gt;

    &lt;div id="post-footer"&gt;
        &lt;div&gt;
    &lt;div class="navlinks"&gt;
                &lt;a href="/posts/Updating-blog-to-wyam" title="Previous Post: Exit Docpad, enter Wyam" class="navlinks-prev"&gt;« Exit Docpad, enter Wyam&lt;/a&gt;
                &lt;a href="/posts/Blog-publishing-with-AppVeyor" title="Next Post: Blog publishing with AppVeyor" class="navlinks-next"&gt;Blog publishing with AppVeyor »&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'mindvortex'; // required: replace example with your forum shortname
    var disqus_identifier = 'Goals-for-2017';
    var disqus_title = 'Goals for 2017';
    var disqus_url = 'https://www.petrikvandervelde.nl/posts/Goals-for-2017';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();

    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;

    &lt;/div&gt;
&lt;/div&gt;</content>
		<summary>Welcome!</summary>
	</entry>
	<entry>
		<link href="https://www.petrikvandervelde.nl/posts/Updating-blog-to-wyam" />
		<id>https://www.petrikvandervelde.nl/posts/Updating-blog-to-wyam</id>
		<title>Exit Docpad, enter Wyam</title>
		<updated>2017-01-11T00:00:00Z</updated>
		<content>&lt;div id="post"&gt;
    &lt;div id="post-header"&gt;
        &lt;!--
    Model is: Tuple&lt;IDocument, IDocument&gt;.
    The first one is the current document that is being rendered, the second one is the one for which the post header should be rendered.
--&gt;


&lt;h2&gt;
Exit Docpad, enter Wyam&lt;/h2&gt;
&lt;div id="post-meta"&gt;
    &lt;p&gt;
Wednesday, January 11, 2017
 |         Posted in                     &lt;a id="post-category" role="button" href="/tags/blog" class="btn btn-default btn-xs"&gt;Blog&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;

    &lt;/div&gt;

    &lt;div id="post-content"&gt;
        &lt;p&gt;After not having done anything with my blog for over a year I have returned and will once again try
to make this blogging thing happen. Part of my goals for 2017 is to start advancing my career
independent from my job. And one part of that goal is to blog about all the things I'm learning.&lt;/p&gt;
&lt;p&gt;For about a year and a half &lt;a href="http://docpad.org/"&gt;Docpad&lt;/a&gt; has been very helpful in adding content to
my blog, however as I was trying to automate my blog more and more I came to the conclusion that
being on a Windows operating system doesn't make dealing with node and NPM any easier. So I figured
it might make sense to switch to a &lt;a href=""&gt;static generator&lt;/a&gt; which uses technologies that play better on
Windows. Enter &lt;a href="https://wyam.io"&gt;Wyam&lt;/a&gt;, a static generator written in .NET, a technology stack
I'm very familiar with.&lt;/p&gt;
&lt;h3&gt;Getting started&lt;/h3&gt;
&lt;p&gt;To get started with Wyam I downloaded the latest version and generated a skeleton directory structure
by running the &lt;code&gt;wyam.exe new --recipe Blog&lt;/code&gt; command. Once the skeleton has been created you can
create the pages by running &lt;code&gt;wyam.exe -r Blog -t CleanBlog&lt;/code&gt;, and to create and be able to view
the pages you can execute &lt;code&gt;wyam -r Blog -t CleanBlog -p&lt;/code&gt;. These commands assume that you store
your blog source in the &lt;code&gt;input&lt;/code&gt; directory and that the website pages should be placed in the
&lt;code&gt;output&lt;/code&gt; directory. This however is where the build engineer in me started making
disapproving sounds so I changed the input and output folders by specifying the appropriate command line
parameters to make it happy again&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wyam.exe --input src --output build\site -r Blog -t CleanBlog -p
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Good that is much more inline with the standard paths used by &lt;a href="/projects/nbuildkit"&gt;nBuildKit&lt;/a&gt;.
Another change that needs to be made is where Wyam stores the NuGet packages. Normally Wyam stores
those in a global location, however I strongly feel that builds should always only write to their
local workspaces, so lets redirect the packages to a folder that is local to the workspaces&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wyam.exe --input src --output build\site --use-local-packages --packages-path packages -r Blog -t CleanBlog -p
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That command line is getting longer but we can make it shorter again by moving some of the
standard items into the &lt;a href="https://wyam.io/docs/usage/configuration"&gt;Wyam configuration file&lt;/a&gt;, so
I created a &lt;code&gt;config.wyam&lt;/code&gt; file in the root of the workspace and added the following lines&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// Preprocessor directives
#recipe Blog
#theme CleanBlog
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And with this the command line to generate the website and start a local webserver is&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wyam.exe --input src --output build\site --use-local-packages --packages-path packages
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Moving the existing content&lt;/h3&gt;
&lt;p&gt;Moving the existing content from the Docpad generated site to the Wyam generated site required a bit
of work although the initial results were quite easy to achieve. I started off moving the
post files to the &lt;code&gt;posts&lt;/code&gt; directory and updating all the files to be named so that Wyam is able
to extract the date and time from the file name. In order for that to work Wyam wants the file
name to follow the naming convention &lt;code&gt;&amp;lt;YEAR&amp;gt;-&amp;lt;MONTH&amp;gt;-&amp;lt;DAY&amp;gt;-&amp;lt;TITLE&amp;gt;.md&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The next step was to update the front matter in the post files. Wyam would like to see the
following format:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Title: &amp;lt;POST_TITLE_GOES_HERE&amp;gt;
Tags:
  - &amp;lt;TAG_1&amp;gt;
  - &amp;lt;TAG_2&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With this done Wyam can generate a website with blog posts with the correct titles and dates. This
is a good start. Next are the non-post pages, like the &lt;a href="/"&gt;home page&lt;/a&gt; and the &lt;a href="/projects"&gt;project pages&lt;/a&gt;.
These can simply be dropped in the desired directory. Wyam will automatically generate HTML pages
from any Markdown file and simply copy the other files (like the favicon etc.). Any non-blog post
pages will show up in the menu bar so for all pages that should not show up in the menu bar you can
add the &lt;code&gt;ShowInNavBar: false&lt;/code&gt; entry in the page front matter like so:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Title: My page that shouldn't show up in the NavBar
ShowInNavBar: false
---
# Content
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once that was done I created &lt;a href="https://wyam.io/recipes/blog/themes"&gt;overrides&lt;/a&gt; for&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The page and post footers by creating the &lt;code&gt;_Footer.cshml&lt;/code&gt; and &lt;code&gt;_PostFooter.cshtml&lt;/code&gt; files. The page
footer was straight forward but the post footer required some additional work to get the links
to the previous and next post to function correctly. Fortunately &lt;a href="https://daveaglick.com/"&gt;Dave Glick&lt;/a&gt;
was very helpful on the &lt;a href="https://gitter.im/Wyamio/Wyam"&gt;gitter&lt;/a&gt; page for Wyam and pointed out
that there are collections that you can iterate over to find out what the previous and
next posts are.&lt;/li&gt;
&lt;/ul&gt;
&lt;script src="https://gist.github.com/pvandervelde/d2825f2c5d67ab30d15ce179ced4b30f.js"&gt;&lt;/script&gt;
&lt;ul&gt;
&lt;li&gt;The sidebar which contains my little ‘about me’ blurp.&lt;/li&gt;
&lt;li&gt;The navbar which by default orders pages alphabetically and does not contain a link to the home page.
In my Docpad blog both those things are not true, so I did a bit of Razor coding and generated the
navbar items myself&lt;/li&gt;
&lt;/ul&gt;
&lt;script src="https://gist.github.com/pvandervelde/7645c478ae08c94d3716ca8e8ad41c4c.js"&gt;&lt;/script&gt;
&lt;p&gt;These changes got most of the pages looking pretty close to what they should be, but yet not quite
the same as it was.&lt;/p&gt;
&lt;h3&gt;Tweaking&lt;/h3&gt;
&lt;p&gt;If you don't have an existing layout for your blog or you don't mind changing the layout then
after the previous steps you should have a very nice looking blog that works just fine. However it
turns out I'm stuborn and specific in the way I want things to look. In this case I wanted my blog
to not look any different than the existing one does, at least for the time being. So that meant
I had to do a fair amount of tweaking.&lt;/p&gt;
&lt;p&gt;The first major tweak was to get the sidebar looking like it should. This turned out to be a little
harder than I expected because it required overriding the &lt;code&gt;_Layout.cshtml&lt;/code&gt; page. While this is a
bigger step than the other overrides it also meant I was able to make the pages look exactly like
I wanted and I was able to re-use my CSS files.&lt;/p&gt;
&lt;script src="https://gist.github.com/pvandervelde/5e3520e0f150176f529b1972fc2042a7.js"&gt;&lt;/script&gt;
&lt;p&gt;One of the more tricky parts was to generate a list of the last 10 posts. Originally I was using
the list of posts, however because this is the layout page that is used for all pages it might
well be that some pages are generated before the full post list is available (say hello to the
&lt;a href="/tags"&gt;tags&lt;/a&gt; pages). Once again Dave Glick came through and pointed me to the &lt;a href="https://wyam.io/recipes/blog/pipelines"&gt;RawPosts&lt;/a&gt;
collection which is generated right at the beginning of the cycle.&lt;/p&gt;
&lt;p&gt;Once the issues with the sidebar were resolved the next step was to show the last five blog posts
on the home page. By default Wyam will place excepts on the home page with a link to the actual post
in the post title. However what I wanted was the full post, excluding the comment section. Once again
the &lt;code&gt;RawPosts&lt;/code&gt; collection came to the rescue which allowed me to iterate over the last five posts
and get their pre-rendered content.&lt;/p&gt;
&lt;script src="https://gist.github.com/pvandervelde/d0d83eb2c636a5d3b63b5bf0cce6029c.js"&gt;&lt;/script&gt;
&lt;p&gt;Some additional hacking also allowed me to reuse the &lt;code&gt;_PostHeader.cshtml&lt;/code&gt; file for both the posts
on the home page, for which the title links to the actual post page, and for the post page in which
the title is just a header.&lt;/p&gt;
&lt;script src="https://gist.github.com/pvandervelde/465c0a2399f135a25e656b0d15c1866a.js"&gt;&lt;/script&gt;
&lt;p&gt;With these changes the blog looks (almost) exactly like it used to look except that it is now
being generated by &lt;a href="https://wyam.io"&gt;Wyam&lt;/a&gt;. All in all I have to say I'm pretty happy with the result
and with how easy it was to move from Docpad to Wyam. And as a bonus I understand much more of
how Wyam works and how my own blog is generated.&lt;/p&gt;

    &lt;/div&gt;

    &lt;div id="post-footer"&gt;
        &lt;div&gt;
    &lt;div class="navlinks"&gt;
                &lt;a href="/posts/nBuildKit-release-V051" title="Previous Post: nBuildKit release - V0.5.1" class="navlinks-prev"&gt;« nBuildKit release - V0.5.1&lt;/a&gt;
                &lt;a href="/posts/Goals-for-2017" title="Next Post: Goals for 2017" class="navlinks-next"&gt;Goals for 2017 »&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'mindvortex'; // required: replace example with your forum shortname
    var disqus_identifier = 'Updating-blog-to-wyam';
    var disqus_title = 'Exit Docpad, enter Wyam';
    var disqus_url = 'https://www.petrikvandervelde.nl/posts/Updating-blog-to-wyam';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();

    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;

    &lt;/div&gt;
&lt;/div&gt;</content>
		<summary>Welcome!</summary>
	</entry>
	<entry>
		<link href="https://www.petrikvandervelde.nl/posts/nBuildKit-release-V051" />
		<id>https://www.petrikvandervelde.nl/posts/nBuildKit-release-V051</id>
		<title>nBuildKit release - V0.5.1</title>
		<updated>2015-05-23T00:00:00Z</updated>
		<content>&lt;div id="post"&gt;
    &lt;div id="post-header"&gt;
        &lt;!--
    Model is: Tuple&lt;IDocument, IDocument&gt;.
    The first one is the current document that is being rendered, the second one is the one for which the post header should be rendered.
--&gt;


&lt;h2&gt;
nBuildKit release - V0.5.1&lt;/h2&gt;
&lt;div id="post-meta"&gt;
    &lt;p&gt;
Saturday, May 23, 2015
 |         Posted in                     &lt;a id="post-category" role="button" href="/tags/nbuildkit" class="btn btn-default btn-xs"&gt;nBuildKit&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;

    &lt;/div&gt;

    &lt;div id="post-content"&gt;
        &lt;p&gt;Version &lt;a href="https://github.com/pvandervelde/nBuildKit/releases/tag/0.5.1"&gt;V0.5.1&lt;/a&gt; of the &lt;a href="/projects/nbuildkit.html"&gt;nBuildKit&lt;/a&gt;
build library has been released.&lt;/p&gt;
&lt;p&gt;This release adds the following features&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/nBuildKit/issues/91"&gt;91&lt;/a&gt;: MsBuild.Projects: Common.props should
do a more extensive search for settings.props&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/nBuildKit/issues/90"&gt;90&lt;/a&gt;: MsBuild: Allow pushing symbols via
NuGet enhancement&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/nBuildKit/issues/89"&gt;89&lt;/a&gt;: MsBuild: Allow assembly versioning to
be more custom defined.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/nBuildKit/issues/87"&gt;87&lt;/a&gt;: MsBuild: Rename template files to have
normal extension&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/nBuildKit/issues/86"&gt;86&lt;/a&gt;: MsBuild: Rename the DirMsBuildShared,
DirMsBuildExtensions and DirMsBuildTemplates properties enhancement&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/nBuildKit/issues/85"&gt;85&lt;/a&gt;: Unable to build projects which have a
mixture of target frameworks&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/nBuildKit/issues/83"&gt;83&lt;/a&gt;: MsBuild: Allow PreCleanScripts and
PreCompilationScripts to define their own properties&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/nBuildKit/issues/82"&gt;82&lt;/a&gt;: MsBuild: Update the Sample custom
version files to match the current version gathering capabilities&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/nBuildKit/issues/80"&gt;80&lt;/a&gt;: MsBuild: Combine top-level build.msbuild,
deploy.msbuild and shared.locatenbuildkit.msbuild&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/nBuildKit/issues/78"&gt;78&lt;/a&gt;: MsBuild: Automatically include NuGet
dependencies if nuspec is in same directory as project&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/nBuildKit/issues/72"&gt;72&lt;/a&gt;: MsBuild: Define default directory
paths only in settings.props file&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/nBuildKit/issues/68"&gt;68&lt;/a&gt;: Improve inline documentation of
settings.props file&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/nBuildKit/issues/66"&gt;66&lt;/a&gt;: MsBuild: Provide initialization/installation
scripts for an empty workspace&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/nBuildKit/issues/55"&gt;55&lt;/a&gt;: MsBuild: Allow assembly copyright to be
more custom defined&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/nBuildKit/issues/22"&gt;22&lt;/a&gt;: MsBuild: Allow each file to have their
own base directory when creating ZIP archives&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/nBuildKit/issues/19"&gt;19&lt;/a&gt;: MsBuild.Projects: Provide scripts for
Visual Basic projects&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And fixes the following issues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/nBuildKit/issues/92"&gt;92&lt;/a&gt;: MsBuild.Projects: GetVersion, VcsInfo and
Generate files also run when they're disabled in the settings.props file&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/nBuildKit/issues/88"&gt;88&lt;/a&gt;: MsBuild.Projects: Excessive NuGet
restore of global packages&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/nBuildKit/issues/84"&gt;84&lt;/a&gt;: Not compatible with ncrunch&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/nBuildKit/issues/54"&gt;54&lt;/a&gt;: MsBuild: First space trimmed from
release note content&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally the following tasks were completed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/nBuildKit/issues/7"&gt;7&lt;/a&gt;: MsBuild: Set up tests&lt;/li&gt;
&lt;/ul&gt;

    &lt;/div&gt;

    &lt;div id="post-footer"&gt;
        &lt;div&gt;
    &lt;div class="navlinks"&gt;
                &lt;a href="/posts/nBuildKit-release-V041" title="Previous Post: nBuildKit release - V0.4.1" class="navlinks-prev"&gt;« nBuildKit release - V0.4.1&lt;/a&gt;
                &lt;a href="/posts/Updating-blog-to-wyam" title="Next Post: Exit Docpad, enter Wyam" class="navlinks-next"&gt;Exit Docpad, enter Wyam »&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'mindvortex'; // required: replace example with your forum shortname
    var disqus_identifier = 'nBuildKit-release-V051';
    var disqus_title = 'nBuildKit release - V0.5.1';
    var disqus_url = 'https://www.petrikvandervelde.nl/posts/nBuildKit-release-V051';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();

    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;

    &lt;/div&gt;
&lt;/div&gt;</content>
		<summary>Welcome!</summary>
	</entry>
	<entry>
		<link href="https://www.petrikvandervelde.nl/posts/nBuildKit-release-V041" />
		<id>https://www.petrikvandervelde.nl/posts/nBuildKit-release-V041</id>
		<title>nBuildKit release - V0.4.1</title>
		<updated>2014-11-30T00:00:00Z</updated>
		<content>&lt;div id="post"&gt;
    &lt;div id="post-header"&gt;
        &lt;!--
    Model is: Tuple&lt;IDocument, IDocument&gt;.
    The first one is the current document that is being rendered, the second one is the one for which the post header should be rendered.
--&gt;


&lt;h2&gt;
nBuildKit release - V0.4.1&lt;/h2&gt;
&lt;div id="post-meta"&gt;
    &lt;p&gt;
Sunday, November 30, 2014
 |         Posted in                     &lt;a id="post-category" role="button" href="/tags/nbuildkit" class="btn btn-default btn-xs"&gt;nBuildKit&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;

    &lt;/div&gt;

    &lt;div id="post-content"&gt;
        &lt;p&gt;Version &lt;a href="https://github.com/pvandervelde/nBuildKit/releases/tag/0.4.1"&gt;V0.4.1&lt;/a&gt; of the
&lt;a href="/projects/nbuildkit.html"&gt;nBuildKit&lt;/a&gt; build library has been released.&lt;/p&gt;
&lt;p&gt;This release introduces the ability to &lt;a href="https://github.com/pvandervelde/nBuildKit/issues/44"&gt;mix custom build steps&lt;/a&gt;
with the default provided ones in &lt;a href="https://github.com/pvandervelde/nBuildKit/issues/47"&gt;any order&lt;/a&gt;
that is desired. On top of that additional changes were made that now make it possible to build
&lt;a href="https://github.com/pvandervelde/nBuildKit/issues/46"&gt;multiple Visual Studio solutions&lt;/a&gt; in a specific
order.&lt;/p&gt;
&lt;p&gt;Finally the user can provide one or more scripts that will be called if the build or the deploy process
&lt;a href="https://github.com/pvandervelde/nBuildKit/issues/48"&gt;fails&lt;/a&gt;. These scripts can be used to clean-up
resources or provide notification on build failure. Do note that any failure in these scripts will
lead to the immediate termination of the process.&lt;/p&gt;

    &lt;/div&gt;

    &lt;div id="post-footer"&gt;
        &lt;div&gt;
    &lt;div class="navlinks"&gt;
                &lt;a href="/posts/Creating-azure-vm-images-with-powershell" title="Previous Post: Creating Azure VM images with Powershell" class="navlinks-prev"&gt;« Creating Azure VM images with Powershell&lt;/a&gt;
                &lt;a href="/posts/nBuildKit-release-V051" title="Next Post: nBuildKit release - V0.5.1" class="navlinks-next"&gt;nBuildKit release - V0.5.1 »&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'mindvortex'; // required: replace example with your forum shortname
    var disqus_identifier = 'nBuildKit-release-V041';
    var disqus_title = 'nBuildKit release - V0.4.1';
    var disqus_url = 'https://www.petrikvandervelde.nl/posts/nBuildKit-release-V041';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();

    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;

    &lt;/div&gt;
&lt;/div&gt;</content>
		<summary>Welcome!</summary>
	</entry>
	<entry>
		<link href="https://www.petrikvandervelde.nl/posts/Creating-azure-vm-images-with-powershell" />
		<id>https://www.petrikvandervelde.nl/posts/Creating-azure-vm-images-with-powershell</id>
		<title>Creating Azure VM images with Powershell</title>
		<updated>2014-11-10T00:00:00Z</updated>
		<content>&lt;div id="post"&gt;
    &lt;div id="post-header"&gt;
        &lt;!--
    Model is: Tuple&lt;IDocument, IDocument&gt;.
    The first one is the current document that is being rendered, the second one is the one for which the post header should be rendered.
--&gt;


&lt;h2&gt;
Creating Azure VM images with Powershell&lt;/h2&gt;
&lt;div id="post-meta"&gt;
    &lt;p&gt;
Monday, November 10, 2014
 |         Posted in                     &lt;a id="post-category" role="button" href="/tags/azure" class="btn btn-default btn-xs"&gt;Azure&lt;/a&gt;
                    &lt;a id="post-category" role="button" href="/tags/powershell" class="btn btn-default btn-xs"&gt;Powershell&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;

    &lt;/div&gt;

    &lt;div id="post-content"&gt;
        &lt;p&gt;As part of a new &lt;a href="https://github.com/pvandervelde/azure-jenkins"&gt;project&lt;/a&gt; to create a
&lt;a href="http://jenkins-ci.org/"&gt;Jenkins CI server&lt;/a&gt; on Azure I am writing a set of powershell scripts to
control virtual machines on Azure. For this project the plan is to use virtual machine (VM) images
as a template for an &lt;a href="http://martinfowler.com/bliki/ImmutableServer.html"&gt;‘immutable server’&lt;/a&gt; that
will contain the Jenkins instance.&lt;/p&gt;
&lt;p&gt;Now the actual server isn't really ‘immutable’ given that the jenkins instance will update, add and
delete files on the hard drive which will obviously change the state of the server. As such the immutable
idea isn't applied to the whole server but more to the configuration part of the server. The idea being
that the configuration of the server will not be changed once the server is put in production. Any
configuration changes (e.g. a new version of Jenkins) will be done by creating a new image, spinning
up a new server based on that image and then destroying the old server and replacing it with the
new one.&lt;/p&gt;
&lt;p&gt;So in order to achieve this goal the first step will be to build an image with all the required
software on it and then verify that this image has indeed been created correctly.&lt;/p&gt;
&lt;p&gt;To create the image we first obtain a certificate that can be used for the WinRM SSL connection between
the Azure VM and the local machine that is executing the creation scripts. You can either get an official
one or you can use a self-signed certificate (which is obviously less secure). Two things of
interest are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The certificate needs to have an &lt;a href="http://consultingblogs.emc.com/gracemollison/archive/2010/02/19/creating-and-using-self-signed-certificates-for-use-with-azure-service-management-api.aspx"&gt;exportable&lt;/a&gt;
private key because otherwise it cannot be used for the WinRM connection.&lt;/li&gt;
&lt;li&gt;The certificate needs to be named after the connection that you expect to make. For a connection to
an Azure VM this will most likely be something like &lt;code&gt;&amp;lt;RESOURCE_GROUP_NAME&amp;gt;.cloudapp.net&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once the certificate is installed in the user certificate store we can create a new virtual machine
from a given base image, e.g. a Windows 2012 R2 server image. The following powershell function creates
a new windows VM with a WinRM endpoint with the certificate that was created earlier. Note that the
&lt;a href="http://msdn.microsoft.com/en-us/library/dn495254.aspx"&gt;&lt;code&gt;New-AzureVM&lt;/code&gt;&lt;/a&gt; function can create resource
and storage groups for the new VM if you don't specify a storage account and a matching resource group.&lt;/p&gt;
&lt;script src="https://gist.github.com/pvandervelde/1153f249115780ed2b99.js"&gt;&lt;/script&gt;
&lt;p&gt;Once the VM is running a new Powershell remote session can be opened to the machine in order to start
the configuration of the machine. Note that this approach only seems to be working for &lt;code&gt;https&lt;/code&gt; connections
because the &lt;code&gt;Get-AzureWinRMUri&lt;/code&gt; function only returns the &lt;code&gt;https&lt;/code&gt; URI. Hence the need for a certificate
that can be used to secure the connection.&lt;/p&gt;
&lt;script src="https://gist.github.com/pvandervelde/eb6e28934d5fd16fe186.js"&gt;&lt;/script&gt;
&lt;p&gt;The next step is to copy all the installer files and configuration scripts to the VM. This can be
done over the &lt;a href="http://measureofchaos.wordpress.com/2012/09/26/copying-files-via-powershell-remoting-channel/"&gt;remoting channnel&lt;/a&gt;.&lt;/p&gt;
&lt;script src="https://gist.github.com/pvandervelde/b2f5b4156e5efe67f495.js"&gt;&lt;/script&gt;
&lt;p&gt;Once all the required files have been copied to the VM the configuration of the machine can be started.
This can be done in many different ways, e.g through the use of a &lt;a href="https://www.getchef.com/"&gt;configuration&lt;/a&gt;
&lt;a href="http://puppetlabs.com/"&gt;management&lt;/a&gt; &lt;a href="http://technet.microsoft.com/en-us/library/dn249912.aspx"&gt;tool&lt;/a&gt;
or just via the use of plain old scripts. When the configuration is complete and all the necessary
clean-up has been done the time has come to turn the VM into an image. Before doing that a Windows
machine will have to be &lt;a href="http://en.wikipedia.org/wiki/Sysprep"&gt;sysprepp'ed&lt;/a&gt; so that there are no
unique identifiers in the image (and thus in the copies).&lt;/p&gt;
&lt;p&gt;In order to sysprep an Azure VM it is necessary to execute the sysprep command through a script on the
VM because sysprep &lt;a href="http://blogs.msdn.com/b/brocode/archive/2014/06/20/how-to-automate-sysprep-of-an-iaas-vm-on-microsoft-azure.aspx"&gt;fails&lt;/a&gt;
if the command is given directly through the remoting channel. The following function creates a new
Powershell script which invokes sysprep, copies that to the VM and then executes that script. Once
sysprep has completed running the machine will be turned off and an image can be created.&lt;/p&gt;
&lt;script src="https://gist.github.com/pvandervelde/b2f5b4156e5efe67f495.js"&gt;&lt;/script&gt;
&lt;p&gt;The next step is to test the new image in order to verify that all configuration changes have been
applied correctly. The explanation of how the testing of an virtual machine image works is a topic
for the next blog post.&lt;/p&gt;

    &lt;/div&gt;

    &lt;div id="post-footer"&gt;
        &lt;div&gt;
    &lt;div class="navlinks"&gt;
                &lt;a href="/posts/Building-and-delivering-nBuildKit-with-AppVeyor" title="Previous Post: Building and delivering nBuildKit with AppVeyor" class="navlinks-prev"&gt;« Building and delivering nBuildKit with AppVeyor&lt;/a&gt;
                &lt;a href="/posts/nBuildKit-release-V041" title="Next Post: nBuildKit release - V0.4.1" class="navlinks-next"&gt;nBuildKit release - V0.4.1 »&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'mindvortex'; // required: replace example with your forum shortname
    var disqus_identifier = 'Creating-azure-vm-images-with-powershell';
    var disqus_title = 'Creating Azure VM images with Powershell';
    var disqus_url = 'https://www.petrikvandervelde.nl/posts/Creating-azure-vm-images-with-powershell';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();

    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;

    &lt;/div&gt;
&lt;/div&gt;</content>
		<summary>Welcome!</summary>
	</entry>
	<entry>
		<link href="https://www.petrikvandervelde.nl/posts/Building-and-delivering-nBuildKit-with-AppVeyor" />
		<id>https://www.petrikvandervelde.nl/posts/Building-and-delivering-nBuildKit-with-AppVeyor</id>
		<title>Building and delivering nBuildKit with AppVeyor</title>
		<updated>2014-09-27T00:00:00Z</updated>
		<content>&lt;div id="post"&gt;
    &lt;div id="post-header"&gt;
        &lt;!--
    Model is: Tuple&lt;IDocument, IDocument&gt;.
    The first one is the current document that is being rendered, the second one is the one for which the post header should be rendered.
--&gt;


&lt;h2&gt;
Building and delivering nBuildKit with AppVeyor&lt;/h2&gt;
&lt;div id="post-meta"&gt;
    &lt;p&gt;
Saturday, September 27, 2014
 |         Posted in                     &lt;a id="post-category" role="button" href="/tags/appveyor" class="btn btn-default btn-xs"&gt;AppVeyor&lt;/a&gt;
                    &lt;a id="post-category" role="button" href="/tags/continous-integration" class="btn btn-default btn-xs"&gt;Continous integration&lt;/a&gt;
                    &lt;a id="post-category" role="button" href="/tags/nbuildkit" class="btn btn-default btn-xs"&gt;nBuildKit&lt;/a&gt;
                    &lt;a id="post-category" role="button" href="/tags/software-delivery" class="btn btn-default btn-xs"&gt;Software delivery&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;

    &lt;/div&gt;

    &lt;div id="post-content"&gt;
        &lt;p&gt;The build server that is being used to build the packages for &lt;a href="/projects/nbuildkit.html"&gt;nBuildKit&lt;/a&gt;
is &lt;a href="http://www.appveyor.com/"&gt;AppVeyor&lt;/a&gt;. AppVeyor is an Continuous Integration system in the cloud.
The way AppVeyor works is that every time a commit occurs in a GitHub project AppVeyor is notified.
AppVeyor then spins up a new clean virtual machine (VM) on which your build scripts are executed.
Once the build is done the VM is terminated and thrown away. This way there is no way that the
changes made to the build environment by a build will influence future builds.&lt;/p&gt;
&lt;p&gt;For nBuildKit two builds were configured. The first configuration is the standard
&lt;a href="https://ci.appveyor.com/project/pvandervelde/nbuildkit"&gt;continuous integration&lt;/a&gt; build which generates
the version numbers and templates and then creates the NuGet packages. As the final step the build
artefacts are archived for later use by the second build configuration.
For this configuration no special settings are required other then to tell AppVeyor to store the artifacts.&lt;/p&gt;
&lt;p&gt;The second build configuration handles the &lt;a href="https://ci.appveyor.com/project/pvandervelde/nbuildkit-244"&gt;delivery&lt;/a&gt;
of the artefacts. This configuration gathers the build artefacts from the latest build of the first
build configuration, tags the revision that was build and then pushes the NuGet packages to
&lt;a href="http://www.nuget.org/packages/nbuildkit.msbuild"&gt;NuGet.org&lt;/a&gt; and marks the given commit as a release
in &lt;a href="https://github.com/pvandervelde/nBuildKit/releases"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For this second configuration a few tweaks need to be made to the environment before the build can be
executed. The first thing to do is to install the &lt;a href="https://github.com/aktau/github-release"&gt;GitHub-release&lt;/a&gt;
application which provides an easy way to push release information to github. A simple Powershell
script is used to set-up this part of the environment:&lt;/p&gt;
&lt;script src="https://gist.github.com/pvandervelde/77bd834239d9f67c40d7.js"&gt;&lt;/script&gt;
&lt;p&gt;Once all the required tools are installed the artefacts of the selected continuous integration build
need to be downloaded and placed in the correct directories. For that yet another Powershell script
is used:&lt;/p&gt;
&lt;script src="https://gist.github.com/pvandervelde/9cf270ef5266b18a1ac9.js"&gt;&lt;/script&gt;
&lt;p&gt;Once all the artefacts are restored the delivery process can be executed. For nBuildKit the delivery
process is executed by nBuildKit itself in the standard dogfooding approach that is so well known in
the software business.&lt;/p&gt;

    &lt;/div&gt;

    &lt;div id="post-footer"&gt;
        &lt;div&gt;
    &lt;div class="navlinks"&gt;
                &lt;a href="/posts/nBuildKit-release-V032" title="Previous Post: nBuildKit release - V0.3.2" class="navlinks-prev"&gt;« nBuildKit release - V0.3.2&lt;/a&gt;
                &lt;a href="/posts/Creating-azure-vm-images-with-powershell" title="Next Post: Creating Azure VM images with Powershell" class="navlinks-next"&gt;Creating Azure VM images with Powershell »&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'mindvortex'; // required: replace example with your forum shortname
    var disqus_identifier = 'Building-and-delivering-nBuildKit-with-AppVeyor';
    var disqus_title = 'Building and delivering nBuildKit with AppVeyor';
    var disqus_url = 'https://www.petrikvandervelde.nl/posts/Building-and-delivering-nBuildKit-with-AppVeyor';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();

    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;

    &lt;/div&gt;
&lt;/div&gt;</content>
		<summary>Welcome!</summary>
	</entry>
	<entry>
		<link href="https://www.petrikvandervelde.nl/posts/nBuildKit-release-V032" />
		<id>https://www.petrikvandervelde.nl/posts/nBuildKit-release-V032</id>
		<title>nBuildKit release - V0.3.2</title>
		<updated>2014-08-19T00:00:00Z</updated>
		<content>&lt;div id="post"&gt;
    &lt;div id="post-header"&gt;
        &lt;!--
    Model is: Tuple&lt;IDocument, IDocument&gt;.
    The first one is the current document that is being rendered, the second one is the one for which the post header should be rendered.
--&gt;


&lt;h2&gt;
nBuildKit release - V0.3.2&lt;/h2&gt;
&lt;div id="post-meta"&gt;
    &lt;p&gt;
Tuesday, August 19, 2014
 |         Posted in                     &lt;a id="post-category" role="button" href="/tags/nbuildkit" class="btn btn-default btn-xs"&gt;nBuildKit&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;

    &lt;/div&gt;

    &lt;div id="post-content"&gt;
        &lt;p&gt;Version &lt;a href="https://github.com/pvandervelde/nBuildKit/releases/tag/0.3.2"&gt;V0.3.2&lt;/a&gt; of the
&lt;a href="/projects/nbuildkit.html"&gt;nBuildKit&lt;/a&gt; build library has been released.&lt;/p&gt;
&lt;p&gt;This release introduces a version provider using &lt;a href="https://github.com/Particular/GitVersion"&gt;GitVersion&lt;/a&gt;
and a custom version provider that can be implemented by a user. On top of that the
&lt;a href="https://www.nuget.org/packages/nBuildKit.MsBuild.Projects.Common/"&gt;nBuildKit.MsBuild.Projects.Common&lt;/a&gt;
and &lt;a href="https://www.nuget.org/packages/nBuildKit.MsBuild.Projects.Common.Net/"&gt;nBuildKit.MsBuild.Projects.Common.Net&lt;/a&gt;
packages have been merged with the &lt;a href="https://www.nuget.org/packages/nBuildKit.MsBuild.Projects.CSharp/"&gt;C#&lt;/a&gt;
and &lt;a href="https://www.nuget.org/packages/nBuildKit.MsBuild.Projects.WiX/"&gt;WiX&lt;/a&gt; packages.&lt;/p&gt;

    &lt;/div&gt;

    &lt;div id="post-footer"&gt;
        &lt;div&gt;
    &lt;div class="navlinks"&gt;
                &lt;a href="/posts/Adding-pagination-with-DocPad" title="Previous Post: Adding pagination with DocPad" class="navlinks-prev"&gt;« Adding pagination with DocPad&lt;/a&gt;
                &lt;a href="/posts/Building-and-delivering-nBuildKit-with-AppVeyor" title="Next Post: Building and delivering nBuildKit with AppVeyor" class="navlinks-next"&gt;Building and delivering nBuildKit with AppVeyor »&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'mindvortex'; // required: replace example with your forum shortname
    var disqus_identifier = 'nBuildKit-release-V032';
    var disqus_title = 'nBuildKit release - V0.3.2';
    var disqus_url = 'https://www.petrikvandervelde.nl/posts/nBuildKit-release-V032';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();

    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;

    &lt;/div&gt;
&lt;/div&gt;</content>
		<summary>Welcome!</summary>
	</entry>
	<entry>
		<link href="https://www.petrikvandervelde.nl/posts/Adding-pagination-with-DocPad" />
		<id>https://www.petrikvandervelde.nl/posts/Adding-pagination-with-DocPad</id>
		<title>Adding pagination with DocPad</title>
		<updated>2014-07-26T00:00:00Z</updated>
		<content>&lt;div id="post"&gt;
    &lt;div id="post-header"&gt;
        &lt;!--
    Model is: Tuple&lt;IDocument, IDocument&gt;.
    The first one is the current document that is being rendered, the second one is the one for which the post header should be rendered.
--&gt;


&lt;h2&gt;
Adding pagination with DocPad&lt;/h2&gt;
&lt;div id="post-meta"&gt;
    &lt;p&gt;
Saturday, July 26, 2014
 |         Posted in                     &lt;a id="post-category" role="button" href="/tags/blog" class="btn btn-default btn-xs"&gt;Blog&lt;/a&gt;
                    &lt;a id="post-category" role="button" href="/tags/docpad" class="btn btn-default btn-xs"&gt;DocPad&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;

    &lt;/div&gt;

    &lt;div id="post-content"&gt;
        &lt;p&gt;Last year when I started this blog I decided to keep the layout as simple as possible, hence all
the posts were just added to the home page and to their own page. Over time as more posts were
written the home page got larger and larger making it slower to load and more difficult to navigate.
In order to improve this &lt;a href="https://github.com/pvandervelde/mindvortex/commit/9472ad503725eb42d98e30b6c4452d2b6766b344"&gt;pagination&lt;/a&gt;
of the home page was introduced.&lt;/p&gt;
&lt;p&gt;Once again &lt;a href="http://docpad.org/"&gt;DocPad&lt;/a&gt; makes this very easy because all you have to do is add the
&lt;a href="https://github.com/docpad/docpad-plugin-paged"&gt;DocPad-paged&lt;/a&gt; plugin and then update the documents
you want to split. In the case of this blog only the index page needed to be split. The new index
page now looks like this:&lt;/p&gt;
&lt;script src="https://gist.github.com/pvandervelde/26f698e7c7099033188f.js"&gt;&lt;/script&gt;
&lt;p&gt;In order to make the paged plugin do its work the following ‘properties’ were added to the header:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;isPaged&lt;/strong&gt; - Indicates that the document should be broken up into multiple pages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;pageCollection&lt;/strong&gt; - The collection from which the sub-documents that will fill up the current page are taken.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;pageSize&lt;/strong&gt; - The number of sub-documents per page&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally two buttons were added to the bottom of the page to naviage to he newer and the older posts.&lt;/p&gt;

    &lt;/div&gt;

    &lt;div id="post-footer"&gt;
        &lt;div&gt;
    &lt;div class="navlinks"&gt;
                &lt;a href="/posts/Blog-archives-by-DocPad" title="Previous Post: Blog archives by DocPad" class="navlinks-prev"&gt;« Blog archives by DocPad&lt;/a&gt;
                &lt;a href="/posts/nBuildKit-release-V032" title="Next Post: nBuildKit release - V0.3.2" class="navlinks-next"&gt;nBuildKit release - V0.3.2 »&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'mindvortex'; // required: replace example with your forum shortname
    var disqus_identifier = 'Adding-pagination-with-DocPad';
    var disqus_title = 'Adding pagination with DocPad';
    var disqus_url = 'https://www.petrikvandervelde.nl/posts/Adding-pagination-with-DocPad';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();

    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;

    &lt;/div&gt;
&lt;/div&gt;</content>
		<summary>Welcome!</summary>
	</entry>
	<entry>
		<link href="https://www.petrikvandervelde.nl/posts/Blog-archives-by-DocPad" />
		<id>https://www.petrikvandervelde.nl/posts/Blog-archives-by-DocPad</id>
		<title>Blog archives by DocPad</title>
		<updated>2014-07-24T00:00:00Z</updated>
		<content>&lt;div id="post"&gt;
    &lt;div id="post-header"&gt;
        &lt;!--
    Model is: Tuple&lt;IDocument, IDocument&gt;.
    The first one is the current document that is being rendered, the second one is the one for which the post header should be rendered.
--&gt;


&lt;h2&gt;
Blog archives by DocPad&lt;/h2&gt;
&lt;div id="post-meta"&gt;
    &lt;p&gt;
Thursday, July 24, 2014
 |         Posted in                     &lt;a id="post-category" role="button" href="/tags/blog" class="btn btn-default btn-xs"&gt;Blog&lt;/a&gt;
                    &lt;a id="post-category" role="button" href="/tags/docpad" class="btn btn-default btn-xs"&gt;DocPad&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;

    &lt;/div&gt;

    &lt;div id="post-content"&gt;
        &lt;p&gt;A while ago I decided that it was time to add an &lt;a href="/archives.html"&gt;archive&lt;/a&gt; page to the website so
that there would be a place to get a quick overview of all the posts that I have written. Fortunately
setting up an archive page with &lt;a href="http://docpad.org/"&gt;DocPad&lt;/a&gt; is relatively &lt;a href="https://github.com/pvandervelde/mindvortex/commit/31698aa10fd205f41999e0b89792744a2bb8b82b"&gt;simple&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The first step to take was to add a new layout for the archive page.&lt;/p&gt;
&lt;script src="https://gist.github.com/pvandervelde/b7434bc8a1b7eb240da9.js"&gt;&lt;/script&gt;
&lt;p&gt;The layout gets the list of all posts and iterates over them in chronological order. All the posts
for one year are grouped together under a header titled after the year. In keeping with the layout
of the rest of the site each post gets a title, the day and month and the tags that belong to that
post. In order for this specific layout to work you will need to add the &lt;code&gt;moment&lt;/code&gt; node.js package&lt;/p&gt;
&lt;p&gt;The layout and the CSS for the archive page is heavily based on the layout created by &lt;a href="http://www.jptacek.com/"&gt;John Ptacek&lt;/a&gt;.&lt;/p&gt;

    &lt;/div&gt;

    &lt;div id="post-footer"&gt;
        &lt;div&gt;
    &lt;div class="navlinks"&gt;
                &lt;a href="/posts/nBuildKit-release-V024" title="Previous Post: nBuildKit release - V0.2.4" class="navlinks-prev"&gt;« nBuildKit release - V0.2.4&lt;/a&gt;
                &lt;a href="/posts/Adding-pagination-with-DocPad" title="Next Post: Adding pagination with DocPad" class="navlinks-next"&gt;Adding pagination with DocPad »&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'mindvortex'; // required: replace example with your forum shortname
    var disqus_identifier = 'Blog-archives-by-DocPad';
    var disqus_title = 'Blog archives by DocPad';
    var disqus_url = 'https://www.petrikvandervelde.nl/posts/Blog-archives-by-DocPad';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();

    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;

    &lt;/div&gt;
&lt;/div&gt;</content>
		<summary>Welcome!</summary>
	</entry>
	<entry>
		<link href="https://www.petrikvandervelde.nl/posts/nBuildKit-release-V024" />
		<id>https://www.petrikvandervelde.nl/posts/nBuildKit-release-V024</id>
		<title>nBuildKit release - V0.2.4</title>
		<updated>2014-07-21T00:00:00Z</updated>
		<content>&lt;div id="post"&gt;
    &lt;div id="post-header"&gt;
        &lt;!--
    Model is: Tuple&lt;IDocument, IDocument&gt;.
    The first one is the current document that is being rendered, the second one is the one for which the post header should be rendered.
--&gt;


&lt;h2&gt;
nBuildKit release - V0.2.4&lt;/h2&gt;
&lt;div id="post-meta"&gt;
    &lt;p&gt;
Monday, July 21, 2014
 |         Posted in                     &lt;a id="post-category" role="button" href="/tags/nbuildkit" class="btn btn-default btn-xs"&gt;nBuildKit&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;

    &lt;/div&gt;

    &lt;div id="post-content"&gt;
        &lt;p&gt;Version &lt;a href="https://github.com/pvandervelde/nBuildKit/releases/tag/0.2.4"&gt;V0.2.4&lt;/a&gt; of the
&lt;a href="/projects/nbuildkit.html"&gt;nBuildKit&lt;/a&gt; build library has been released.&lt;/p&gt;
&lt;p&gt;This release introduces NuGet packages that allow Visual Studio &lt;a href="https://www.nuget.org/packages/nBuildKit.MsBuild.Projects.CSharp/"&gt;C#&lt;/a&gt;
and &lt;a href="https://www.nuget.org/packages/nBuildKit.MsBuild.Projects.WiX/"&gt;WiX&lt;/a&gt; projects to share a common
configuration including code analysis and strong naming capabilities and to generate one or more source
files before building the project.&lt;/p&gt;
&lt;p&gt;Both packages provide the ability to share a configuration between multiple projects in a Visual Studio
solution. The shared configuration can contain items like Debug and Release settings, targeted .NET
framework, code analysis settings and many other options.&lt;/p&gt;
&lt;p&gt;Beyond that the C# NuGet package provides capabilities to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generate &lt;code&gt;AssemblyInfo.XXXX.cs&lt;/code&gt; files for:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;AssemblyInfo.VersionNumber.cs&lt;/code&gt; contains the version numbers for the project as determined by
nBuildKit from the versioning strategies provided. Currently supported are either a version number
provided through an MsBuild project file or through &lt;a href="https://github.com/JakeGinnivan/GitHubFlowVersion"&gt;GitHubFlowVersion&lt;/a&gt;.
By allowing nBuildKit to generate the &lt;code&gt;AssemblyInfo.VersionNumber.cs&lt;/code&gt; file it is possible to
automatically version the binaries the same way as all other artifacts, e.g. NuGet packages,
installers, documentation etc. etc.. The version number is currently provided through the
&lt;a href="http://msdn.microsoft.com/en-us/library/system.reflection.assemblyversionattribute(v=vs.110).aspx"&gt;AssemblyVersionAttribute&lt;/a&gt; as &lt;code&gt;Major.Minor.0.0&lt;/code&gt;; through the
&lt;a href="http://msdn.microsoft.com/en-us/library/system.reflection.assemblyfileversionattribute(v=vs.110).aspx"&gt;AssemblyFileVersionAttribute&lt;/a&gt; as &lt;code&gt;Major.Minor.Patch.Build&lt;/code&gt;;
and through the &lt;a href="http://msdn.microsoft.com/en-us/library/system.reflection.assemblyinformationalversionattribute(v=vs.110).aspx"&gt;AssemblyInformationalVersionAttribute&lt;/a&gt;
as the full &lt;a href="http://semver.org/"&gt;semantic version&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AssemblyInfo.BuildInformation.cs&lt;/code&gt; contains information about the current build of the binaries.
This includes the configuration, e.g. Release; the date and time that the binary was compiled
and information describing the build number and the commit number that were used to generate
the binaries.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AssemblyInfo.InternalsVisibleTo.cs&lt;/code&gt; contains the &lt;a href="http://msdn.microsoft.com/en-us/library/system.runtime.compilerservices.internalsvisibletoattribute(v=vs.110).aspx"&gt;InternalsVisibleToAttribute&lt;/a&gt;
values for any assemblies that should have access to the internals of the current assembly for
purposes of unit testing.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AssemblyInfo.Company.cs&lt;/code&gt; contains the information describing the ‘company’ that created the binaries.
The information includes the &lt;a href="http://msdn.microsoft.com/en-us/library/system.reflection.assemblycompanyattribute(v=vs.110).aspx"&gt;AssemblyCompanyAttribute&lt;/a&gt; and the &lt;a href="http://msdn.microsoft.com/en-us/library/system.reflection.assemblycopyrightattribute(v=vs.110).aspx"&gt;AssemblyCopyrightAttribute&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Generate a &lt;code&gt;CompanyInformation.cs&lt;/code&gt; source file that contains an internal static class providing
constants for the company name and the company URL.&lt;/li&gt;
&lt;li&gt;Generate a &lt;code&gt;ProductInformation.cs&lt;/code&gt; source file that contains an internal static class providing
constants for the name of the product.&lt;/li&gt;
&lt;li&gt;Generate an &lt;code&gt;app.manifest&lt;/code&gt; file with the current project version number.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And the WiX NuGet package provides capabilities to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generate a &lt;code&gt;VersionNumber.wxi&lt;/code&gt; WiX include file that contains the version numbers for the application
and the installer.&lt;/li&gt;
&lt;li&gt;Generate a &lt;code&gt;CompanyInformation.wxi&lt;/code&gt; WiX include file that contains the name and URL of the company
that produces the product.&lt;/li&gt;
&lt;li&gt;Generate a &lt;code&gt;ProductInformation.wxi&lt;/code&gt; WiX include file that contains the name and description of
the product.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The generation of all of these files can be enabled through a setting in the &lt;code&gt;settings.props&lt;/code&gt; file
that is also used by the &lt;a href="https://www.nuget.org/packages/nBuildKit.MsBuild/"&gt;nBuildKit.MsBuild&lt;/a&gt;
NuGet package&lt;/p&gt;
&lt;p&gt;The documentation for this library can be found on the nBuildKit &lt;a href="https://github.com/pvandervelde/nBuildKit/wiki/MsBuild"&gt;wiki&lt;/a&gt;&lt;/p&gt;

    &lt;/div&gt;

    &lt;div id="post-footer"&gt;
        &lt;div&gt;
    &lt;div class="navlinks"&gt;
                &lt;a href="/posts/nBuildKit-release-V015" title="Previous Post: nBuildKit release - V0.1.5" class="navlinks-prev"&gt;« nBuildKit release - V0.1.5&lt;/a&gt;
                &lt;a href="/posts/Blog-archives-by-DocPad" title="Next Post: Blog archives by DocPad" class="navlinks-next"&gt;Blog archives by DocPad »&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'mindvortex'; // required: replace example with your forum shortname
    var disqus_identifier = 'nBuildKit-release-V024';
    var disqus_title = 'nBuildKit release - V0.2.4';
    var disqus_url = 'https://www.petrikvandervelde.nl/posts/nBuildKit-release-V024';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();

    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;

    &lt;/div&gt;
&lt;/div&gt;</content>
		<summary>Welcome!</summary>
	</entry>
	<entry>
		<link href="https://www.petrikvandervelde.nl/posts/nBuildKit-release-V015" />
		<id>https://www.petrikvandervelde.nl/posts/nBuildKit-release-V015</id>
		<title>nBuildKit release - V0.1.5</title>
		<updated>2014-06-16T00:00:00Z</updated>
		<content>&lt;div id="post"&gt;
    &lt;div id="post-header"&gt;
        &lt;!--
    Model is: Tuple&lt;IDocument, IDocument&gt;.
    The first one is the current document that is being rendered, the second one is the one for which the post header should be rendered.
--&gt;


&lt;h2&gt;
nBuildKit release - V0.1.5&lt;/h2&gt;
&lt;div id="post-meta"&gt;
    &lt;p&gt;
Monday, June 16, 2014
 |         Posted in                     &lt;a id="post-category" role="button" href="/tags/nbuildkit" class="btn btn-default btn-xs"&gt;nBuildKit&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;

    &lt;/div&gt;

    &lt;div id="post-content"&gt;
        &lt;p&gt;Version &lt;a href="https://github.com/pvandervelde/nBuildKit/releases/tag/0.1.5"&gt;V0.1.5&lt;/a&gt; of the &lt;a href="/projects/nbuildkit.html"&gt;nBuildKit&lt;/a&gt;
build library has been released.&lt;/p&gt;
&lt;p&gt;This first release introduces the &lt;a href="https://www.nuget.org/packages/nBuildKit.MsBuild/0.1.5"&gt;MsBuild&lt;/a&gt;
NuGet package. This package contains build scripts that provide the ability to perform a complete build
consisting of workspace preparation, compilation of binaries, execution of unit tests, analysis of
source code and binaries and finally packing of the binaries as NuGet packages or ZIP archives.
The &lt;code&gt;nBuildKit.MsBuild&lt;/code&gt; NuGet package also provides scripts that can be used to tag a release in the
version control system (VCS) and deploy the artifacts to a file server, NuGet feed or a GitHub release.&lt;/p&gt;
&lt;p&gt;The documentation for this library can be found on the nBuildKit &lt;a href="https://github.com/pvandervelde/nBuildKit/wiki/MsBuild"&gt;wiki&lt;/a&gt;&lt;/p&gt;

    &lt;/div&gt;

    &lt;div id="post-footer"&gt;
        &lt;div&gt;
    &lt;div class="navlinks"&gt;
                &lt;a href="/posts/Nuclei-release-V080" title="Previous Post: Nuclei release - V0.8.0" class="navlinks-prev"&gt;« Nuclei release - V0.8.0&lt;/a&gt;
                &lt;a href="/posts/nBuildKit-release-V024" title="Next Post: nBuildKit release - V0.2.4" class="navlinks-next"&gt;nBuildKit release - V0.2.4 »&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'mindvortex'; // required: replace example with your forum shortname
    var disqus_identifier = 'nBuildKit-release-V015';
    var disqus_title = 'nBuildKit release - V0.1.5';
    var disqus_url = 'https://www.petrikvandervelde.nl/posts/nBuildKit-release-V015';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();

    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;

    &lt;/div&gt;
&lt;/div&gt;</content>
		<summary>Welcome!</summary>
	</entry>
	<entry>
		<link href="https://www.petrikvandervelde.nl/posts/Nuclei-release-V080" />
		<id>https://www.petrikvandervelde.nl/posts/Nuclei-release-V080</id>
		<title>Nuclei release - V0.8.0</title>
		<updated>2014-05-28T00:00:00Z</updated>
		<content>&lt;div id="post"&gt;
    &lt;div id="post-header"&gt;
        &lt;!--
    Model is: Tuple&lt;IDocument, IDocument&gt;.
    The first one is the current document that is being rendered, the second one is the one for which the post header should be rendered.
--&gt;


&lt;h2&gt;
Nuclei release - V0.8.0&lt;/h2&gt;
&lt;div id="post-meta"&gt;
    &lt;p&gt;
Wednesday, May 28, 2014
 |         Posted in                     &lt;a id="post-category" role="button" href="/tags/nuclei" class="btn btn-default btn-xs"&gt;Nuclei&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;

    &lt;/div&gt;

    &lt;div id="post-content"&gt;
        &lt;p&gt;Version &lt;a href="https://github.com/pvandervelde/Nuclei/releases/tag/0.8.0"&gt;V0.8.0&lt;/a&gt; of the
&lt;a href="/projects/nuclei.html"&gt;Nuclei&lt;/a&gt; library has been released.&lt;/p&gt;
&lt;p&gt;This release introduces a few large features to Nuclei.Communication library and adds some minor
updates to the base Nuclei library.&lt;/p&gt;
&lt;p&gt;The main focus of this release was adding version tolerance (&lt;a href="https://github.com/pvandervelde/Nuclei/issues/3"&gt;#3&lt;/a&gt;)
to the different layers of the communication stack:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;The discovery layer&lt;/em&gt; - Provides ways to discover remote endpoints either automatically (via &lt;a href="http://msdn.microsoft.com/en-us/library/dd456782%28v=vs.110%29.aspx"&gt;WCF discovery&lt;/a&gt;)
or manually.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;The protocol layer&lt;/em&gt; - Provides the means to send messages to one or more remote endpoints and
handling the responses to those messages if they are expected.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;The interaction layer&lt;/em&gt; -  Provides an abstraction over the &lt;em&gt;protocol layer&lt;/em&gt; in the form of an
proxy objects that provide user-defined methods which can be invoked on a remote endpoint.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In version 0.8.0 of the Nuclei.Communication library each of these layers now supports the ability
to negotiate with a remote endpoint to determine which communication version will be used to exchange
data between the endpoints. The  communication version which will be used is the highest (i.e. most
recent) version that both endpoints support. If the endpoint do not support the same versions then
communication will not be enabled between the endpoints.&lt;/p&gt;
&lt;p&gt;The second focus was to improve the robustness of all the network activity. The main changes here were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/Nuclei/issues/7"&gt;#7&lt;/a&gt; - Detection of messages that have not received
their response within a given time-out.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/Nuclei/issues/11"&gt;#11&lt;/a&gt;, &lt;a href="https://github.com/pvandervelde/Nuclei/pull/17"&gt;#17&lt;/a&gt;,
&lt;a href="https://github.com/pvandervelde/Nuclei/pull/18"&gt;#18&lt;/a&gt; - Method(s) to detect if a remote endpoint is
still available and discard endpoint information if it is not.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pvandervelde/Nuclei/issues/19"&gt;#19&lt;/a&gt;,
&lt;a href="https://github.com/pvandervelde/Nuclei/issues/23"&gt;#23&lt;/a&gt; - Automatically rebuilding the communication
channel if it faults during message sending and then resend the message that caused the faulting.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The final focus was on decoupling the interaction interfaces from their implementations. With these
changes an endpoint does not need to provide concrete implementations of either the command
(&lt;a href="https://github.com/pvandervelde/Nuclei/pull/6"&gt;#6&lt;/a&gt;) and notification (&lt;a href="https://github.com/pvandervelde/Nuclei/pull/31"&gt;#31&lt;/a&gt;)
interfaces but can map the members on those interfaces to equivalent members on any given object.&lt;/p&gt;
&lt;p&gt;Additionally it is now possible for some parameters on a command interface method (ie. the method
on a command interface) and a command object method (i.e .the concrete instance method that is
mapped to the given command) to contain parameters that have a special meaning. The available
options are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For command interface methods (&lt;a href="https://github.com/pvandervelde/Nuclei/issues/23"&gt;#23&lt;/a&gt;)
&lt;ul&gt;
&lt;li&gt;Provision of a time-out indicating the maximum amount of time the endpoint should wait for a
response to the command invocation request.&lt;/li&gt;
&lt;li&gt;Provision of a retry count indicating the maximum number of times the endpoint should send the
command invocation request should any errors occur during invocation.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For command instance methods (&lt;a href="https://github.com/pvandervelde/Nuclei/pull/28"&gt;#28&lt;/a&gt;)
&lt;ul&gt;
&lt;li&gt;Provision of the ID of the endpoint requesting the invocation of the command method.&lt;/li&gt;
&lt;li&gt;Provision of the ID of the message that was send to request the invocation of the command method.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally the Nuclei library versioning was switched to use &lt;a href="http://semver.org/"&gt;semantic versioning&lt;/a&gt;.&lt;/p&gt;

    &lt;/div&gt;

    &lt;div id="post-footer"&gt;
        &lt;div&gt;
    &lt;div class="navlinks"&gt;
                &lt;a href="/posts/Improvements-to-the-site" title="Previous Post: Improvements to the site" class="navlinks-prev"&gt;« Improvements to the site&lt;/a&gt;
                &lt;a href="/posts/nBuildKit-release-V015" title="Next Post: nBuildKit release - V0.1.5" class="navlinks-next"&gt;nBuildKit release - V0.1.5 »&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;div id="disqus_thread"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'mindvortex'; // required: replace example with your forum shortname
    var disqus_identifier = 'Nuclei-release-V080';
    var disqus_title = 'Nuclei release - V0.8.0';
    var disqus_url = 'https://www.petrikvandervelde.nl/posts/Nuclei-release-V080';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();

    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
&lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;

    &lt;/div&gt;
&lt;/div&gt;</content>
		<summary>Welcome!</summary>
	</entry>
</feed>